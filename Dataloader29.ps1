<#
.Description
Data loader for loading data

.PARAMETER CADMDatafile
Comma seperate list of filenames to be copied and loaded.  If not specified manual mode of script is forced

.PARAMETER UBDatafile
Comma seperate list of filenames to be copied and loaded.  If not specified manual mode of script is forced

.PARAMETER EBDatafile
Comma seperate list of filenames to be copied and loaded.  If not specified manual mode of script is forced

.PARAMETER CADMShare
Folder containing all CADM files to be copied.  Used in conjunctions with CADMDatafile list.  Default value "\\sea1condir\FT_users\cadm_user\incoming\cadm\daily\"

.PARAMETER UBShare
Folder containing all UB files to be copied.  Used in conjunctions with UBDatafile list.  Default value "\\sea1condir\FT_users\ub_user\incoming\ub\subcycle"

.PARAMETER EBShare
Folder containing all E bill files to be copied.  Used in conjunctions with EBDatafile list.  Default value "\\sea1fs01\Shared\Temp\for_serife\ebill\"

.PARAMETER CADMJob
Full nam of the CADM data load job in sql.  It is run via `"exec msdb.dbo.sp_start_job @job_name = '$JobName'`"".  Default value "attwln_integrations - Run CADM Integration"
 
.PARAMETER UBJob
Full nam of the UB data load job in sql.  It is run via `"exec msdb.dbo.sp_start_job @job_name = '$JobName'`"".  Default value "attwln_integrations - Run UB Integration"
 
.PARAMETER EBJob
Full nam of the E Bill data load job in sql.  It is run via `"exec msdb.dbo.sp_start_job @job_name = '$JobName'`"".  Default value "attwln_integrations - Run EB Integration"

.PARAMETER CADMFolder
Folder path on local machine copy to.  All files in folder are loaded by CADMJob.  DO NOT change unless modifying CADMJob as well. Default "F:\Load\ToConvert\attwln\cadm"

.PARAMETER UBFolder
Folder path on local machine copy to.  All files in folder are loaded by CADMJob.  DO NOT change unless modifying CADMJob as well. Default "F:\Load\ToConvert\attwln\ub"

.PARAMETER EBFolder
Folder path on local machine copy to.  All files in folder are loaded by CADMJob.  DO NOT change unless modifying CADMJob as well. Default "F:\Load\ToConvert\attwln\ebill_migratio"

.PARAMETER BatchSize
Number of UB and EB to load at one time

.EXAMPLE
Manual Mode, default values
PS> dataload.ps1 

.EXAMPLE
Automatic mode, cadm only loaded
PS> dataload.ps1 -CADMDatafile file1, file2

.EXAMPLE
Automatic mode, all types  loaded, EB loads all files in folder
PS> dataload.ps1 -CADMDatafile file1 -UBMDatafile file1, file2 -EBDatafile *

#> 

param (
    [string]
    #Name of CADM dataload SQL script
    $CADMJob = "attwln_integrations - Run CADM Integration",
    [string]
    #Name of UB dataload SQL script first step
    [string]
	$UBJob1 = "attwln_integrations - UB Biller - Find Files",
	#Name of UB dataload SQL script second step
	[string]
	$UBJob2 = "attwln_integrations - UB Biller - Process Batch",
	[string]
	#Name of UB dataload SQL script third step
	$UBJob3 = "attwln_integrations - Update Account Detail Cache",
    [string]
    #Name of E Bill dataload SQL script
    $EBJob1 = "attwln_integrations - Run EBill_User_Customer Integration",
    [string]
    #Name of E Bill dataload SQL script
    $EBJob2 = "attwln_integrations - Run EBill_User Migration",	
	[string]
    #Name of E Bill dataload SQL script
    $EBJob3 = "attwln_integrations - Update Account Detail Cache",		
	[string]
    #Name of CAPMCBUS dataload SQL script
    $CAPMCBUSJob = "attwln_integrations - Run CAPM CBUS Payment Integration",		
	[string]
    #Name of CAPMCBUS dataload SQL script
    $CAPMCFMJob = "attwln_integrations - Run CAPM CFM Payment Integration",
	

    [string[]]
    #List of CADM files to copy
    $CADMDatafile,
    [string[]]
    #List of UB files to copy
    $UBDatafile,
    [string[]]
    #List of E Bill files to copy
    $EBDatafile,	
	[string[]]
    #List of CAPMCBUS files to copy
    $CAPMCBUSfile,	
	[string[]]
    #List of CAPMCFM files to copy
    $CAPMCFMfile,	
	
    [int]
    #emailSeed
    $Seed,

    [string]
    #Folder of location of CADM files. Default "\\sea1condir\FT_users\cadm_user\incoming\cadm\daily\"
    $CADMShare = "\\sea1condir\FT_users\cadm_user\incoming\cadm\daily\",

    [string]
    #Folder of location of UB files. Default "\\sea1condir\FT_users\ub_user\incoming\ub\subcycle"
    $UBShare = "\\sea1fs01\Shared\Teams\Engineering\FireDogs\ForZiplineWork\wirelineUBfiles",

    [string]
    #Folder of location of E Bill files. Default "\\sea1fs01\Shared\Temp\for_serife\ebill\"
    $EBShare = "\\sea1fs01\Shared\Teams\Engineering\QA\ATT-Wireline\UAT\Data\eBill_Files",
	
	#Folder of location of CAPM CBUS files. Default "\\sea1condir\FT_users\ditrexwln_user\incoming\capm\cbus"
	$CAPMCBUSShare = "\\sea1condir\FT_users\ditrexwln_user\incoming\capm\cbus",

	#Folder of location of CAPM CFM files. Default "\\sea1condir\FT_users\ditrexwln_user\incoming\capm\cfm"
	$CAPMCFMShare  = "\\sea1condir\FT_users\ditrexwln_user\incoming\capm\cfm",
	
	
    [string]
    #Folder to copy CADM files to local machine. Default "F:\Load\ToConvert\attwln\cadm"
    $CADMFolder= "F:\Load\ToConvert\attwln\cadm",
    [string]
    #Folder to copy CADM files to local machine. Default "F:\Load\ToConvert\attwln\ub"
    $UBFolder= "F:\Load\ToConvert\attwln\ub",
    [string]
    #Folder to copy CADM files to local machine. Default "F:\Load\ToConvert\attwln\ebill_migration"
    $EBFolder= "F:\Load\ToConvert\attwln\ebill_migration",	
	#Folder to copy CADM cubs files to local machine. Default "F:\Load\ToConvert\attwln\capm_cbus"
	$CAPMCBSFolder= "F:\Load\ToConvert\attwln\capm_cbus",
	#Folder to copy CADM cfm files to local machine. Default "F:\Load\ToConvert\attwln\capm_cfm"
	$CAPMCFMFolder= "F:\Load\ToConvert\attwln\capm_cfm"	,
	

    [int[]]
    #Number of ub/eb to load at once
    $Options,

    #Adds extra logging messages
    [switch]
    $Debug
)
$ActText = ("[0]YouShouldntSeeThis","[1] - UAT Setup","[2] - CADM Setup","[3] - UB Setup","[4] - E Bill Setup","[5] - Create Users", "[6] - CAPMCBUS","[7] - CAPMCFM")


$ActLastStatus = @("Waiting","Waiting","Waiting","Waiting","Waiting","Waiting", "Waiting", "Waiting" ) 
function Get-AllFiles
{
    param([string]$share)
    [string[]]$files = @()
    Write-Debug "Adding all files in $share"
    foreach ($file in (Get-ChildItem -Path $share))
    {
        if($files.Contains($file))
        {
            Write-Debug "Duplicate file $file, skipping"
        }
        else
        {
            Write-Debug "Adding $name"
            $files += $file.Name
        }
    }
    return $files
}
function Restart-Email
{
    $result = Execute-SQL -Query "DBCC CHECKIDENT('cv_system_db..t_email_message', RESEED, $Seed)"
}
function Update-CATPW
{
    $result = Execute-SQL -Query `
@"
    select * from cv_system_db.dbo.t_ce_csr_internal_user 
    update [cv_system_db].[dbo].[t_ce_csr_internal_user] 
    set login_locked_date = NULL,
    last_login = getdate()
    where ce_csr_internal_user_id in (select ce_csr_internal_user_id from cv_system_db.dbo.t_ce_csr_internal_user)

    update [cv_system_db].[dbo].t_ce_csr_internal_password_history
    set create_date = getdate()-10
    where user_id in (select ce_csr_internal_user_id from cv_system_db.dbo.t_ce_csr_internal_user)
"@
}
function Update-Path
{
    $machine = Hostname
    $result = Execute-SQL -Query "update t_bill_doc_type_config set service_endpoint = 'https://$machine.engineering.corp.ad.local/Globys.AttWln.Documents'"
}
function Update-SSORedirect
{
    $result = Execute-SQL -Query "update t_client set sso_redirect_url = NULL"
}
function Update-CATFlag 
{
    $result = Execute-SQL -Query "update cv_system_db.dbo.t_client set cat_sso_flg = 0"
}
function Update-PDFPush
{
    return
    $result = Execute-SQL -Query `
@"
    INSERT t_report_order_order_template 
    (report_order_order_template_id, report_class_id, report_type_id, template_name, description, sort_order,
    page_title_id, page_desc_text_id, doc_type_id, report_order_output_format_id, email_notification,
    compress_output_file, attach_unzipped_files, xlsx_header_include, report_order_data_range_id, report_pdf_size_id,
    pdf_orientation, bmtype, report_order_frequency_id, report_order_frequency_dateunit, doc_type_options,
    template_display_options)
    VALUES (
      1, 10, null, 'Set up Email Invoice Delivery', 'This is an internal description of this template', 1,
      31000, 31001, 101, null, 1,
      null, null, null, 21, null,
      null, 'v', 4, 0, '',
      '{"showAccountScopeSummary": true, "hideAccountScope": true, "hideDateScope":true,"hideReportTypes":true,"hideFrequency":true}'
  )
"@ 
}
function Update-SSOLogin
{
    $result = Execute-SQL -Query "update cv_system_db.dbo.t_backendapi_client_config set username = 'att_wln_api_test', password = 'n8dfL2!xHp94'"
}
function Update-LoginRedirect
{
    $result = Execute-SQL -Query "UPDATE attwln_config_prod_db..t_custom_value SET char_value = 
    'https://bcst4.stage.att.com/ebiz/registration/' WHERE custom_type_id = 4368 and default_value = 0"
}
function Update-Currency
{
    $result = Execute-SQL -Query `
@"
TRUNCATE TABLE cv_system_db..t_currency_rate_system
INSERT INTO cv_system_db..t_currency_rate_system
VALUES
(1, 1, 1.000000000000, 'May  3 2018  5:00AM'),
(1, 2, 1.282995516300, 'May  3 2018  5:00AM'),
(1, 3, 1.425039268700, 'May  3 2018  5:00AM'),
(1, 4, 1.332350537700, 'May  3 2018  5:00AM'),
(1, 5, 0.833179891700, 'May  3 2018  5:00AM'),
(1, 6, 18.984574457600, 'May  3 2018  5:00AM'),
(1, 7, 109.820631791900, 'May  3 2018  5:00AM'),
(1, 8, 0.733520865300, 'May  3 2018  5:00AM'),
(1, 9, 6.206039776600, 'May  3 2018  5:00AM'),
(1, 10, 8.073711120300, 'May  3 2018  5:00AM'),
(1, 11, 8.857224483800, 'May  3 2018  5:00AM'),
(1, 12, 7.849491450800, 'May  3 2018  5:00AM'),
(1, 13, 3.935727163500, 'May  3 2018  5:00AM'),
(1, 14, 1.335124279300, 'May  3 2018  5:00AM'),
(1, 16, 66.691338047100, 'May  3 2018  5:00AM'),
(1, 17, 0.75, 'May  3 2018  5:00AM'),
(1, 18, 3.672500000000, 'May  3 2018  5:00AM'),
(1, 19, 6.358791277800, 'May  3 2018  5:00AM'),
(1, 20, 29.752746200600, 'May  3 2018  5:00AM'),
(1, 21, 1076.147204899100, 'May  3 2018  5:00AM'),
(1, 23, 21.329345880500, 'May  3 2018  5:00AM'),
(1, 24, 0.996088898900, 'May  3 2018  5:00AM'),
(1, 26, 3.560809994000, 'May  3 2018  5:00AM'),
(1, 27, 3.750000000000, 'May  3 2018  5:00AM'),
(1, 28, 3.640000000000, 'May  3 2018  5:00AM'),
(1, 29, 0.376000000000, 'May  3 2018  5:00AM'),
(1, 30, 0.302155434900, 'May  3 2018  5:00AM'),
(1, 31, 0.384500000000, 'May  3 2018  5:00AM'),
(1, 32, 115.666989295300, 'May  3 2018  5:00AM'),
(1, 33, 17.643894602700, 'May  3 2018  5:00AM'),
(1, 34, 0.709000000000, 'May  3 2018  5:00AM'),
(1, 35, 20.531206281700, 'May  3 2018  5:00AM'),
(1, 36, 3.508202072000, 'May  3 2018  5:00AM'),
(1, 37, 615.548870864400, 'May  3 2018  5:00AM'),
(1, 40, 3.257654530000, 'May  3 2018  5:00AM'),
(1, 41, 63.710610600100, 'May  3 2018  5:00AM'),
(2, 1, 0.779425950700, 'May  3 2018  5:00AM'),
(2, 2, 1.000000000000, 'May  3 2018  5:00AM'),
(2, 3, 1.110712586800, 'May  3 2018  5:00AM'),
(2, 4, 1.038468584500, 'May  3 2018  5:00AM'),
(2, 5, 0.649402029200, 'May  3 2018  5:00AM'),
(2, 6, 14.797069994700, 'May  3 2018  5:00AM'),
(2, 7, 85.597050337800, 'May  3 2018  5:00AM'),
(2, 8, 0.571725197800, 'May  3 2018  5:00AM'),
(2, 9, 4.837148452800, 'May  3 2018  5:00AM'),
(2, 10, 6.292859965400, 'May  3 2018  5:00AM'),
(2, 11, 6.903550613600, 'May  3 2018  5:00AM'),
(2, 12, 6.118097336300, 'May  3 2018  5:00AM'),
(2, 13, 3.067607886000, 'May  3 2018  5:00AM'),
(2, 14, 1.040630510700, 'May  3 2018  5:00AM'),
(2, 16, 51.980959558900, 'May  3 2018  5:00AM'),
(2, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(2, 18, 2.862441803800, 'May  3 2018  5:00AM'),
(2, 19, 4.956206936800, 'May  3 2018  5:00AM'),
(2, 20, 23.190062492500, 'May  3 2018  5:00AM'),
(2, 21, 838.777058241500, 'May  3 2018  5:00AM'),
(2, 23, 16.624645690100, 'May  3 2018  5:00AM'),
(2, 24, 0.776377537000, 'May  3 2018  5:00AM'),
(2, 26, 2.775387714700, 'May  3 2018  5:00AM'),
(2, 27, 2.922847315000, 'May  3 2018  5:00AM'),
(2, 28, 2.837110460400, 'May  3 2018  5:00AM'),
(2, 29, 0.293064157500, 'May  3 2018  5:00AM'),
(2, 30, 0.235507787100, 'May  3 2018  5:00AM'),
(2, 31, 0.299689278000, 'May  3 2018  5:00AM'),
(2, 32, 90.153853092900, 'May  3 2018  5:00AM'),
(2, 33, 13.752109324300, 'May  3 2018  5:00AM'),
(2, 34, 0.552612999000, 'May  3 2018  5:00AM'),
(2, 35, 16.002554974600, 'May  3 2018  5:00AM'),
(2, 36, 2.734383735100, 'May  3 2018  5:00AM'),
(2, 37, 479.774763858500, 'May  3 2018  5:00AM'),
(2, 40, 2.539100479000, 'May  3 2018  5:00AM'),
(2, 41, 49.657703234900, 'May  3 2018  5:00AM'),
(3, 1, 0.701735048300, 'May  3 2018  5:00AM'),
(3, 2, 0.900322920600, 'May  3 2018  5:00AM'),
(3, 3, 1.000000000000, 'May  3 2018  5:00AM'),
(3, 4, 0.934957068900, 'May  3 2018  5:00AM'),
(3, 5, 0.584671531500, 'May  3 2018  5:00AM'),
(3, 6, 13.322141273300, 'May  3 2018  5:00AM'),
(3, 7, 77.064986350900, 'May  3 2018  5:00AM'),
(3, 8, 0.514737299800, 'May  3 2018  5:00AM'),
(3, 9, 4.354995622200, 'May  3 2018  5:00AM'),
(3, 10, 5.665606062700, 'May  3 2018  5:00AM'),
(3, 11, 6.215424850600, 'May  3 2018  5:00AM'),
(3, 12, 5.508263262100, 'May  3 2018  5:00AM'),
(3, 13, 2.761837691000, 'May  3 2018  5:00AM'),
(3, 14, 0.936903500600, 'May  3 2018  5:00AM'),
(3, 16, 46.799649323300, 'May  3 2018  5:00AM'),
(3, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(3, 18, 2.577121964800, 'May  3 2018  5:00AM'),
(3, 19, 4.462186704200, 'May  3 2018  5:00AM'),
(3, 20, 20.878544791100, 'May  3 2018  5:00AM'),
(3, 21, 755.170210769600, 'May  3 2018  5:00AM'),
(3, 23, 14.967549560900, 'May  3 2018  5:00AM'),
(3, 24, 0.698990491500, 'May  3 2018  5:00AM'),
(3, 26, 2.498745173000, 'May  3 2018  5:00AM'),
(3, 27, 2.631506431000, 'May  3 2018  5:00AM'),
(3, 28, 2.554315575700, 'May  3 2018  5:00AM'),
(3, 29, 0.263852378100, 'May  3 2018  5:00AM'),
(3, 30, 0.212033058700, 'May  3 2018  5:00AM'),
(3, 31, 0.269817126100, 'May  3 2018  5:00AM'),
(3, 32, 81.167580315700, 'May  3 2018  5:00AM'),
(3, 33, 12.381339230600, 'May  3 2018  5:00AM'),
(3, 34, 0.497530149200, 'May  3 2018  5:00AM'),
(3, 35, 14.407467031000, 'May  3 2018  5:00AM'),
(3, 36, 2.461828350300, 'May  3 2018  5:00AM'),
(3, 37, 431.952216605200, 'May  3 2018  5:00AM'),
(3, 40, 2.286010358800, 'May  3 2018  5:00AM'),
(3, 41, 44.707968404400, 'May  3 2018  5:00AM'),
(4, 1, 0.750553230300, 'May  3 2018  5:00AM'),
(4, 2, 0.962956429300, 'May  3 2018  5:00AM'),
(4, 3, 1.069567826500, 'May  3 2018  5:00AM'),
(4, 4, 1.000000000000, 'May  3 2018  5:00AM'),
(4, 5, 0.625345859200, 'May  3 2018  5:00AM'),
(4, 6, 14.248933685600, 'May  3 2018  5:00AM'),
(4, 7, 82.426229948100, 'May  3 2018  5:00AM'),
(4, 8, 0.550546455000, 'May  3 2018  5:00AM'),
(4, 9, 4.657963201900, 'May  3 2018  5:00AM'),
(4, 10, 6.059749962100, 'May  3 2018  5:00AM'),
(4, 11, 6.647818448100, 'May  3 2018  5:00AM'),
(4, 12, 5.891461164800, 'May  3 2018  5:00AM'),
(4, 13, 2.953972736300, 'May  3 2018  5:00AM'),
(4, 14, 1.002081840700, 'May  3 2018  5:00AM'),
(4, 16, 50.055399206100, 'May  3 2018  5:00AM'),
(4, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(4, 18, 2.756406738400, 'May  3 2018  5:00AM'),
(4, 19, 4.772611334500, 'May  3 2018  5:00AM'),
(4, 20, 22.331019772000, 'May  3 2018  5:00AM'),
(4, 21, 807.705760945500, 'May  3 2018  5:00AM'),
(4, 23, 16.008809451400, 'May  3 2018  5:00AM'),
(4, 24, 0.747617740800, 'May  3 2018  5:00AM'),
(4, 26, 2.672577443600, 'May  3 2018  5:00AM'),
(4, 27, 2.814574613700, 'May  3 2018  5:00AM'),
(4, 28, 2.732013758400, 'May  3 2018  5:00AM'),
(4, 29, 0.282208014600, 'May  3 2018  5:00AM'),
(4, 30, 0.226783737700, 'May  3 2018  5:00AM'),
(4, 31, 0.288587717100, 'May  3 2018  5:00AM'),
(4, 32, 86.814232457900, 'May  3 2018  5:00AM'),
(4, 33, 13.242682089600, 'May  3 2018  5:00AM'),
(4, 34, 0.532142240300, 'May  3 2018  5:00AM'),
(4, 35, 15.409763197300, 'May  3 2018  5:00AM'),
(4, 36, 2.633092397800, 'May  3 2018  5:00AM'),
(4, 37, 462.002193452000, 'May  3 2018  5:00AM'),
(4, 40, 2.445043130800, 'May  3 2018  5:00AM'),
(4, 41, 47.818204592100, 'May  3 2018  5:00AM'),
(5, 1, 1.200220996600, 'May  3 2018  5:00AM'),
(5, 2, 1.539878157300, 'May  3 2018  5:00AM'),
(5, 3, 1.710362051300, 'May  3 2018  5:00AM'),
(5, 4, 1.599115090200, 'May  3 2018  5:00AM'),
(5, 5, 1.000000000000, 'May  3 2018  5:00AM'),
(5, 6, 22.785684876400, 'May  3 2018  5:00AM'),
(5, 7, 131.809028141400, 'May  3 2018  5:00AM'),
(5, 8, 0.880387144000, 'May  3 2018  5:00AM'),
(5, 9, 7.448619245900, 'May  3 2018  5:00AM'),
(5, 10, 9.690237607400, 'May  3 2018  5:00AM'),
(5, 11, 10.630626797400, 'May  3 2018  5:00AM'),
(5, 12, 9.421124452200, 'May  3 2018  5:00AM'),
(5, 13, 4.723742378700, 'May  3 2018  5:00AM'),
(5, 14, 1.602444193100, 'May  3 2018  5:00AM'),
(5, 16, 80.044344218400, 'May  3 2018  5:00AM'),
(5, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(5, 18, 4.407811610200, 'May  3 2018  5:00AM'),
(5, 19, 7.631954804900, 'May  3 2018  5:00AM'),
(5, 20, 35.709870697800, 'May  3 2018  5:00AM'),
(5, 21, 1291.614470799800, 'May  3 2018  5:00AM'),
(5, 23, 25.599928770500, 'May  3 2018  5:00AM'),
(5, 24, 1.195526811000, 'May  3 2018  5:00AM'),
(5, 26, 4.273758919900, 'May  3 2018  5:00AM'),
(5, 27, 4.500828737400, 'May  3 2018  5:00AM'),
(5, 28, 4.368804427800, 'May  3 2018  5:00AM'),
(5, 29, 0.451283094700, 'May  3 2018  5:00AM'),
(5, 30, 0.362653297200, 'May  3 2018  5:00AM'),
(5, 31, 0.461484973200, 'May  3 2018  5:00AM'),
(5, 32, 138.825949170800, 'May  3 2018  5:00AM'),
(5, 33, 21.176572764700, 'May  3 2018  5:00AM'),
(5, 34, 0.850956686600, 'May  3 2018  5:00AM'),
(5, 35, 24.641984865700, 'May  3 2018  5:00AM'),
(5, 36, 4.210617787300, 'May  3 2018  5:00AM'),
(5, 37, 738.794679272000, 'May  3 2018  5:00AM'),
(5, 40, 3.909905366700, 'May  3 2018  5:00AM'),
(5, 41, 76.466812551300, 'May  3 2018  5:00AM'),
(6, 1, 0.052674343700, 'May  3 2018  5:00AM'),
(6, 2, 0.067580946800, 'May  3 2018  5:00AM'),
(6, 3, 0.075063008200, 'May  3 2018  5:00AM'),
(6, 4, 0.070180690200, 'May  3 2018  5:00AM'),
(6, 5, 0.043887204000, 'May  3 2018  5:00AM'),
(6, 6, 1.000000000000, 'May  3 2018  5:00AM'),
(6, 7, 5.784729704500, 'May  3 2018  5:00AM'),
(6, 8, 0.038637730200, 'May  3 2018  5:00AM'),
(6, 9, 0.326899072200, 'May  3 2018  5:00AM'),
(6, 10, 0.425277434500, 'May  3 2018  5:00AM'),
(6, 11, 0.466548486700, 'May  3 2018  5:00AM'),
(6, 12, 0.413466810600, 'May  3 2018  5:00AM'),
(6, 13, 0.207311845300, 'May  3 2018  5:00AM'),
(6, 14, 0.070326795200, 'May  3 2018  5:00AM'),
(6, 16, 3.512922462200, 'May  3 2018  5:00AM'),
(6, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(6, 18, 0.193446527200, 'May  3 2018  5:00AM'),
(6, 19, 0.334945157300, 'May  3 2018  5:00AM'),
(6, 20, 1.567206379400, 'May  3 2018  5:00AM'),
(6, 21, 56.685347743900, 'May  3 2018  5:00AM'),
(6, 23, 1.123509295800, 'May  3 2018  5:00AM'),
(6, 24, 0.052468329000, 'May  3 2018  5:00AM'),
(6, 26, 0.187563329500, 'May  3 2018  5:00AM'),
(6, 27, 0.197528788900, 'May  3 2018  5:00AM'),
(6, 28, 0.191734611100, 'May  3 2018  5:00AM'),
(6, 29, 0.019805553200, 'May  3 2018  5:00AM'),
(6, 30, 0.015915839200, 'May  3 2018  5:00AM'),
(6, 31, 0.020253285200, 'May  3 2018  5:00AM'),
(6, 32, 6.092682749000, 'May  3 2018  5:00AM'),
(6, 33, 0.929380568500, 'May  3 2018  5:00AM'),
(6, 34, 0.037346109700, 'May  3 2018  5:00AM'),
(6, 35, 1.081467816300, 'May  3 2018  5:00AM'),
(6, 36, 0.184792241700, 'May  3 2018  5:00AM'),
(6, 37, 32.423632788800, 'May  3 2018  5:00AM'),
(6, 40, 0.171594814400, 'May  3 2018  5:00AM'),
(6, 41, 3.355914600200, 'May  3 2018  5:00AM'),
(7, 1, 0.009105757100, 'May  3 2018  5:00AM'),
(7, 2, 0.011682645600, 'May  3 2018  5:00AM'),
(7, 3, 0.012976061500, 'May  3 2018  5:00AM'),
(7, 4, 0.012132060400, 'May  3 2018  5:00AM'),
(7, 5, 0.007586733700, 'May  3 2018  5:00AM'),
(7, 6, 0.172868924100, 'May  3 2018  5:00AM'),
(7, 7, 1.000000000000, 'May  3 2018  5:00AM'),
(7, 8, 0.006679262800, 'May  3 2018  5:00AM'),
(7, 9, 0.056510690900, 'May  3 2018  5:00AM'),
(7, 10, 0.073517252500, 'May  3 2018  5:00AM'),
(7, 11, 0.080651734900, 'May  3 2018  5:00AM'),
(7, 12, 0.071475562700, 'May  3 2018  5:00AM'),
(7, 13, 0.035837775600, 'May  3 2018  5:00AM'),
(7, 14, 0.012157317400, 'May  3 2018  5:00AM'),
(7, 16, 0.607275126300, 'May  3 2018  5:00AM'),
(7, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(7, 18, 0.033440893000, 'May  3 2018  5:00AM'),
(7, 19, 0.057901609000, 'May  3 2018  5:00AM'),
(7, 20, 0.270921280600, 'May  3 2018  5:00AM'),
(7, 21, 9.799135074500, 'May  3 2018  5:00AM'),
(7, 23, 0.194219843100, 'May  3 2018  5:00AM'),
(7, 24, 0.009070143600, 'May  3 2018  5:00AM'),
(7, 26, 0.032423871000, 'May  3 2018  5:00AM'),
(7, 27, 0.034146589200, 'May  3 2018  5:00AM'),
(7, 28, 0.033144955900, 'May  3 2018  5:00AM'),
(7, 29, 0.003423764700, 'May  3 2018  5:00AM'),
(7, 30, 0.002751354000, 'May  3 2018  5:00AM'),
(7, 31, 0.003501163600, 'May  3 2018  5:00AM'),
(7, 32, 1.053235511500, 'May  3 2018  5:00AM'),
(7, 33, 0.160661018900, 'May  3 2018  5:00AM'),
(7, 34, 0.006455981800, 'May  3 2018  5:00AM'),
(7, 35, 0.186952177800, 'May  3 2018  5:00AM'),
(7, 36, 0.031944836000, 'May  3 2018  5:00AM'),
(7, 37, 5.605038514400, 'May  3 2018  5:00AM'),
(7, 40, 0.029663410900, 'May  3 2018  5:00AM'),
(7, 41, 0.580133346200, 'May  3 2018  5:00AM'),
(8, 1, 1.363287736300, 'May  3 2018  5:00AM'),
(8, 2, 1.749092053100, 'May  3 2018  5:00AM'),
(8, 3, 1.942738558800, 'May  3 2018  5:00AM'),
(8, 4, 1.816377148500, 'May  3 2018  5:00AM'),
(8, 5, 1.135863928500, 'May  3 2018  5:00AM'),
(8, 6, 25.881437537300, 'May  3 2018  5:00AM'),
(8, 7, 149.717120517100, 'May  3 2018  5:00AM'),
(8, 8, 1.000000000000, 'May  3 2018  5:00AM'),
(8, 9, 8.460617918600, 'May  3 2018  5:00AM'),
(8, 10, 11.006791356900, 'May  3 2018  5:00AM'),
(8, 11, 12.074945516600, 'May  3 2018  5:00AM'),
(8, 12, 10.701115431200, 'May  3 2018  5:00AM'),
(8, 13, 5.365528575500, 'May  3 2018  5:00AM'),
(8, 14, 1.820158556400, 'May  3 2018  5:00AM'),
(8, 16, 90.919483278500, 'May  3 2018  5:00AM'),
(8, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(8, 18, 5.006674211600, 'May  3 2018  5:00AM'),
(8, 19, 8.668862166900, 'May  3 2018  5:00AM'),
(8, 20, 40.561554017200, 'May  3 2018  5:00AM'),
(8, 21, 1467.098286916400, 'May  3 2018  5:00AM'),
(8, 23, 29.078035662700, 'May  3 2018  5:00AM'),
(8, 24, 1.357955780200, 'May  3 2018  5:00AM'),
(8, 26, 4.854408596200, 'May  3 2018  5:00AM'),
(8, 27, 5.112329011200, 'May  3 2018  5:00AM'),
(8, 28, 4.962367360200, 'May  3 2018  5:00AM'),
(8, 29, 0.512596188900, 'May  3 2018  5:00AM'),
(8, 30, 0.411924798900, 'May  3 2018  5:00AM'),
(8, 31, 0.524184134600, 'May  3 2018  5:00AM'),
(8, 32, 157.687388003600, 'May  3 2018  5:00AM'),
(8, 33, 24.053705132800, 'May  3 2018  5:00AM'),
(8, 34, 0.966571005100, 'May  3 2018  5:00AM'),
(8, 35, 27.989941735700, 'May  3 2018  5:00AM'),
(8, 36, 4.782688861300, 'May  3 2018  5:00AM'),
(8, 37, 839.170226756500, 'May  3 2018  5:00AM'),
(8, 40, 4.441120469900, 'May  3 2018  5:00AM'),
(8, 41, 86.855894104700, 'May  3 2018  5:00AM'),
(9, 1, 0.161133353300, 'May  3 2018  5:00AM'),
(9, 2, 0.206733369800, 'May  3 2018  5:00AM'),
(9, 3, 0.229621356000, 'May  3 2018  5:00AM'),
(9, 4, 0.214686109900, 'May  3 2018  5:00AM'),
(9, 5, 0.134253069900, 'May  3 2018  5:00AM'),
(9, 6, 3.059048143600, 'May  3 2018  5:00AM'),
(9, 7, 17.695766663600, 'May  3 2018  5:00AM'),
(9, 8, 0.118194676800, 'May  3 2018  5:00AM'),
(9, 9, 1.000000000000, 'May  3 2018  5:00AM'),
(9, 10, 1.300944146500, 'May  3 2018  5:00AM'),
(9, 11, 1.427194282100, 'May  3 2018  5:00AM'),
(9, 12, 1.264814879300, 'May  3 2018  5:00AM'),
(9, 13, 0.634176915600, 'May  3 2018  5:00AM'),
(9, 14, 0.215133052200, 'May  3 2018  5:00AM'),
(9, 16, 10.746198936500, 'May  3 2018  5:00AM'),
(9, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(9, 18, 0.591762240000, 'May  3 2018  5:00AM'),
(9, 19, 1.024613361600, 'May  3 2018  5:00AM'),
(9, 20, 4.794159765600, 'May  3 2018  5:00AM'),
(9, 21, 173.403207784300, 'May  3 2018  5:00AM'),
(9, 23, 3.436869025700, 'May  3 2018  5:00AM'),
(9, 24, 0.160503144500, 'May  3 2018  5:00AM'),
(9, 26, 0.573765254800, 'May  3 2018  5:00AM'),
(9, 27, 0.604250074900, 'May  3 2018  5:00AM'),
(9, 28, 0.586525406100, 'May  3 2018  5:00AM'),
(9, 29, 0.060586140800, 'May  3 2018  5:00AM'),
(9, 30, 0.048687318400, 'May  3 2018  5:00AM'),
(9, 31, 0.061955774300, 'May  3 2018  5:00AM'),
(9, 32, 18.637809852800, 'May  3 2018  5:00AM'),
(9, 33, 2.843019902800, 'May  3 2018  5:00AM'),
(9, 34, 0.114243547500, 'May  3 2018  5:00AM'),
(9, 35, 3.308262115700, 'May  3 2018  5:00AM'),
(9, 36, 0.565288364000, 'May  3 2018  5:00AM'),
(9, 37, 99.185453690700, 'May  3 2018  5:00AM'),
(9, 40, 0.524916798400, 'May  3 2018  5:00AM'),
(9, 41, 10.265904327600, 'May  3 2018  5:00AM'),
(10, 1, 0.123858778800, 'May  3 2018  5:00AM'),
(10, 2, 0.158910257900, 'May  3 2018  5:00AM'),
(10, 3, 0.176503623600, 'May  3 2018  5:00AM'),
(10, 4, 0.165023310600, 'May  3 2018  5:00AM'),
(10, 5, 0.103196643900, 'May  3 2018  5:00AM'),
(10, 6, 2.351406209000, 'May  3 2018  5:00AM'),
(10, 7, 13.602249344300, 'May  3 2018  5:00AM'),
(10, 8, 0.090852998600, 'May  3 2018  5:00AM'),
(10, 9, 0.768672508100, 'May  3 2018  5:00AM'),
(10, 10, 1.000000000000, 'May  3 2018  5:00AM'),
(10, 11, 1.097045008400, 'May  3 2018  5:00AM'),
(10, 12, 0.972228425500, 'May  3 2018  5:00AM'),
(10, 13, 0.487474360300, 'May  3 2018  5:00AM'),
(10, 14, 0.165366862800, 'May  3 2018  5:00AM'),
(10, 16, 8.260307689200, 'May  3 2018  5:00AM'),
(10, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(10, 18, 0.454871365300, 'May  3 2018  5:00AM'),
(10, 19, 0.787592122500, 'May  3 2018  5:00AM'),
(10, 20, 3.685138811300, 'May  3 2018  5:00AM'),
(10, 21, 133.290278641900, 'May  3 2018  5:00AM'),
(10, 23, 2.641826734000, 'May  3 2018  5:00AM'),
(10, 24, 0.123374354600, 'May  3 2018  5:00AM'),
(10, 26, 0.441037577500, 'May  3 2018  5:00AM'),
(10, 27, 0.464470420600, 'May  3 2018  5:00AM'),
(10, 28, 0.450845954900, 'May  3 2018  5:00AM'),
(10, 29, 0.046570900800, 'May  3 2018  5:00AM'),
(10, 30, 0.037424603200, 'May  3 2018  5:00AM'),
(10, 31, 0.047623700500, 'May  3 2018  5:00AM'),
(10, 32, 14.326372045300, 'May  3 2018  5:00AM'),
(10, 33, 2.185351239300, 'May  3 2018  5:00AM'),
(10, 34, 0.087815874200, 'May  3 2018  5:00AM'),
(10, 35, 2.542970138000, 'May  3 2018  5:00AM'),
(10, 36, 0.434521624500, 'May  3 2018  5:00AM'),
(10, 37, 76.241131456500, 'May  3 2018  5:00AM'),
(10, 40, 0.403489111900, 'May  3 2018  5:00AM'),
(10, 41, 7.891118427500, 'May  3 2018  5:00AM'),
(11, 1, 0.112902185300, 'May  3 2018  5:00AM'),
(11, 2, 0.144852997500, 'May  3 2018  5:00AM'),
(11, 3, 0.160890047600, 'May  3 2018  5:00AM'),
(11, 4, 0.150425287300, 'May  3 2018  5:00AM'),
(11, 5, 0.094067830500, 'May  3 2018  5:00AM'),
(11, 6, 2.143399943400, 'May  3 2018  5:00AM'),
(11, 7, 12.398989321400, 'May  3 2018  5:00AM'),
(11, 8, 0.082816108700, 'May  3 2018  5:00AM'),
(11, 9, 0.700675452900, 'May  3 2018  5:00AM'),
(11, 10, 0.911539629000, 'May  3 2018  5:00AM'),
(11, 11, 1.000000000000, 'May  3 2018  5:00AM'),
(11, 12, 0.886224738400, 'May  3 2018  5:00AM'),
(11, 13, 0.444352197500, 'May  3 2018  5:00AM'),
(11, 14, 0.150738448800, 'May  3 2018  5:00AM'),
(11, 16, 7.529597806700, 'May  3 2018  5:00AM'),
(11, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(11, 18, 0.414633275600, 'May  3 2018  5:00AM'),
(11, 19, 0.717921431200, 'May  3 2018  5:00AM'),
(11, 20, 3.359150065000, 'May  3 2018  5:00AM'),
(11, 21, 121.499371148100, 'May  3 2018  5:00AM'),
(11, 23, 2.408129761100, 'May  3 2018  5:00AM'),
(11, 24, 0.112460613400, 'May  3 2018  5:00AM'),
(11, 26, 0.402023229800, 'May  3 2018  5:00AM'),
(11, 27, 0.423383194900, 'May  3 2018  5:00AM'),
(11, 28, 0.410963954500, 'May  3 2018  5:00AM'),
(11, 29, 0.042451221700, 'May  3 2018  5:00AM'),
(11, 30, 0.034114008900, 'May  3 2018  5:00AM'),
(11, 31, 0.043410890300, 'May  3 2018  5:00AM'),
(11, 32, 13.059055859600, 'May  3 2018  5:00AM'),
(11, 33, 1.992034258000, 'May  3 2018  5:00AM'),
(11, 34, 0.080047649400, 'May  3 2018  5:00AM'),
(11, 35, 2.318018056200, 'May  3 2018  5:00AM'),
(11, 36, 0.396083680400, 'May  3 2018  5:00AM'),
(11, 37, 69.496812685500, 'May  3 2018  5:00AM'),
(11, 40, 0.367796315400, 'May  3 2018  5:00AM'),
(11, 41, 7.193067164200, 'May  3 2018  5:00AM'),
(12, 1, 0.127396788200, 'May  3 2018  5:00AM'),
(12, 2, 0.163449508100, 'May  3 2018  5:00AM'),
(12, 3, 0.181545425900, 'May  3 2018  5:00AM'),
(12, 4, 0.169737179300, 'May  3 2018  5:00AM'),
(12, 5, 0.106144442200, 'May  3 2018  5:00AM'),
(12, 6, 2.418573811600, 'May  3 2018  5:00AM'),
(12, 7, 13.990795770700, 'May  3 2018  5:00AM'),
(12, 8, 0.093448202300, 'May  3 2018  5:00AM'),
(12, 9, 0.790629535100, 'May  3 2018  5:00AM'),
(12, 10, 1.028564865800, 'May  3 2018  5:00AM'),
(12, 11, 1.128381951800, 'May  3 2018  5:00AM'),
(12, 12, 1.000000000000, 'May  3 2018  5:00AM'),
(12, 13, 0.501398999900, 'May  3 2018  5:00AM'),
(12, 14, 0.170090545100, 'May  3 2018  5:00AM'),
(12, 16, 8.496262269400, 'May  3 2018  5:00AM'),
(12, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(12, 18, 0.467864704700, 'May  3 2018  5:00AM'),
(12, 19, 0.810089585800, 'May  3 2018  5:00AM'),
(12, 20, 3.790404306700, 'May  3 2018  5:00AM'),
(12, 21, 137.097697557100, 'May  3 2018  5:00AM'),
(12, 23, 2.717290160000, 'May  3 2018  5:00AM'),
(12, 24, 0.126898526500, 'May  3 2018  5:00AM'),
(12, 26, 0.453635756700, 'May  3 2018  5:00AM'),
(12, 27, 0.477737955800, 'May  3 2018  5:00AM'),
(12, 28, 0.463724309100, 'May  3 2018  5:00AM'),
(12, 29, 0.047901192400, 'May  3 2018  5:00AM'),
(12, 30, 0.038493631900, 'May  3 2018  5:00AM'),
(12, 31, 0.048984065100, 'May  3 2018  5:00AM'),
(12, 32, 14.735602939400, 'May  3 2018  5:00AM'),
(12, 33, 2.247775504100, 'May  3 2018  5:00AM'),
(12, 34, 0.090324322800, 'May  3 2018  5:00AM'),
(12, 35, 2.615609738600, 'May  3 2018  5:00AM'),
(12, 36, 0.446933676400, 'May  3 2018  5:00AM'),
(12, 37, 78.418949141200, 'May  3 2018  5:00AM'),
(12, 40, 0.415014724300, 'May  3 2018  5:00AM'),
(12, 41, 8.116527166100, 'May  3 2018  5:00AM'),
(13, 1, 0.254082653200, 'May  3 2018  5:00AM'),
(13, 2, 0.325986904800, 'May  3 2018  5:00AM'),
(13, 3, 0.362077758300, 'May  3 2018  5:00AM'),
(13, 4, 0.338527159600, 'May  3 2018  5:00AM'),
(13, 5, 0.211696557500, 'May  3 2018  5:00AM'),
(13, 6, 4.823651048200, 'May  3 2018  5:00AM'),
(13, 7, 27.903517502500, 'May  3 2018  5:00AM'),
(13, 8, 0.186374927600, 'May  3 2018  5:00AM'),
(13, 9, 1.576847052300, 'May  3 2018  5:00AM'),
(13, 10, 2.051389942700, 'May  3 2018  5:00AM'),
(13, 11, 2.250467096900, 'May  3 2018  5:00AM'),
(13, 12, 1.994419614100, 'May  3 2018  5:00AM'),
(13, 13, 1.000000000000, 'May  3 2018  5:00AM'),
(13, 14, 0.339231919200, 'May  3 2018  5:00AM'),
(13, 16, 16.945112116900, 'May  3 2018  5:00AM'),
(13, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(13, 18, 0.933118543900, 'May  3 2018  5:00AM'),
(13, 19, 1.615658559100, 'May  3 2018  5:00AM'),
(13, 20, 7.559656694800, 'May  3 2018  5:00AM'),
(13, 21, 273.430337061800, 'May  3 2018  5:00AM'),
(13, 23, 5.419416792500, 'May  3 2018  5:00AM'),
(13, 24, 0.253088910300, 'May  3 2018  5:00AM'),
(13, 26, 0.904740050800, 'May  3 2018  5:00AM'),
(13, 27, 0.952809949500, 'May  3 2018  5:00AM'),
(13, 28, 0.924860857700, 'May  3 2018  5:00AM'),
(13, 29, 0.095535077600, 'May  3 2018  5:00AM'),
(13, 30, 0.076772454600, 'May  3 2018  5:00AM'),
(13, 31, 0.097694780200, 'May  3 2018  5:00AM'),
(13, 32, 29.388975528600, 'May  3 2018  5:00AM'),
(13, 33, 4.483007553600, 'May  3 2018  5:00AM'),
(13, 34, 0.180144601100, 'May  3 2018  5:00AM'),
(13, 35, 5.216623365600, 'May  3 2018  5:00AM'),
(13, 36, 0.891373290400, 'May  3 2018  5:00AM'),
(13, 37, 156.400290287700, 'May  3 2018  5:00AM'),
(13, 40, 0.827713506200, 'May  3 2018  5:00AM'),
(13, 41, 16.187760978700, 'May  3 2018  5:00AM'),
(14, 1, 0.748993944200, 'May  3 2018  5:00AM'),
(14, 2, 0.960955872200, 'May  3 2018  5:00AM'),
(14, 3, 1.067345782600, 'May  3 2018  5:00AM'),
(14, 4, 0.997922484300, 'May  3 2018  5:00AM'),
(14, 5, 0.624046693300, 'May  3 2018  5:00AM'),
(14, 6, 14.219331302700, 'May  3 2018  5:00AM'),
(14, 7, 82.254988164500, 'May  3 2018  5:00AM'),
(14, 8, 0.549402686100, 'May  3 2018  5:00AM'),
(14, 9, 4.648286210400, 'May  3 2018  5:00AM'),
(14, 10, 6.047160736600, 'May  3 2018  5:00AM'),
(14, 11, 6.634007501100, 'May  3 2018  5:00AM'),
(14, 12, 5.879221562000, 'May  3 2018  5:00AM'),
(14, 13, 2.947835811600, 'May  3 2018  5:00AM'),
(14, 14, 1.000000000000, 'May  3 2018  5:00AM'),
(14, 16, 49.951408330400, 'May  3 2018  5:00AM'),
(14, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(14, 18, 2.750680260200, 'May  3 2018  5:00AM'),
(14, 19, 4.762696159700, 'May  3 2018  5:00AM'),
(14, 20, 22.284626728700, 'May  3 2018  5:00AM'),
(14, 21, 806.027739577400, 'May  3 2018  5:00AM'),
(14, 23, 15.975550899000, 'May  3 2018  5:00AM'),
(14, 24, 0.746064553200, 'May  3 2018  5:00AM'),
(14, 26, 2.667025122100, 'May  3 2018  5:00AM'),
(14, 27, 2.808727290900, 'May  3 2018  5:00AM'),
(14, 28, 2.726337957000, 'May  3 2018  5:00AM'),
(14, 29, 0.281621723000, 'May  3 2018  5:00AM'),
(14, 30, 0.226312591000, 'May  3 2018  5:00AM'),
(14, 31, 0.287988171600, 'May  3 2018  5:00AM'),
(14, 32, 86.633874530300, 'May  3 2018  5:00AM'),
(14, 33, 13.215170210200, 'May  3 2018  5:00AM'),
(14, 34, 0.531036706500, 'May  3 2018  5:00AM'),
(14, 35, 15.377749172900, 'May  3 2018  5:00AM'),
(14, 36, 2.627622107100, 'May  3 2018  5:00AM'),
(14, 37, 461.042376659600, 'May  3 2018  5:00AM'),
(14, 40, 2.439963515400, 'May  3 2018  5:00AM'),
(14, 41, 47.718861523100, 'May  3 2018  5:00AM'),
(16, 1, 0.014994451000, 'May  3 2018  5:00AM'),
(16, 2, 0.019237813400, 'May  3 2018  5:00AM'),
(16, 3, 0.021367681500, 'May  3 2018  5:00AM'),
(16, 4, 0.019977864800, 'May  3 2018  5:00AM'),
(16, 5, 0.012493075100, 'May  3 2018  5:00AM'),
(16, 6, 0.284663271300, 'May  3 2018  5:00AM'),
(16, 7, 1.646700081400, 'May  3 2018  5:00AM'),
(16, 8, 0.010998742700, 'May  3 2018  5:00AM'),
(16, 9, 0.093056159300, 'May  3 2018  5:00AM'),
(16, 10, 0.121060865700, 'May  3 2018  5:00AM'),
(16, 11, 0.132809218500, 'May  3 2018  5:00AM'),
(16, 12, 0.117698814900, 'May  3 2018  5:00AM'),
(16, 13, 0.059014068100, 'May  3 2018  5:00AM'),
(16, 14, 0.020019455600, 'May  3 2018  5:00AM'),
(16, 16, 1.000000000000, 'May  3 2018  5:00AM'),
(16, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(16, 18, 0.055067121300, 'May  3 2018  5:00AM'),
(16, 19, 0.095346584200, 'May  3 2018  5:00AM'),
(16, 20, 0.446126094800, 'May  3 2018  5:00AM'),
(16, 21, 16.136236525000, 'May  3 2018  5:00AM'),
(16, 23, 0.319821831500, 'May  3 2018  5:00AM'),
(16, 24, 0.014935806200, 'May  3 2018  5:00AM'),
(16, 26, 0.053392391000, 'May  3 2018  5:00AM'),
(16, 27, 0.056229191200, 'May  3 2018  5:00AM'),
(16, 28, 0.054579801600, 'May  3 2018  5:00AM'),
(16, 29, 0.005637913600, 'May  3 2018  5:00AM'),
(16, 30, 0.004530654900, 'May  3 2018  5:00AM'),
(16, 31, 0.005765366400, 'May  3 2018  5:00AM'),
(16, 32, 1.734363002500, 'May  3 2018  5:00AM'),
(16, 33, 0.264560512900, 'May  3 2018  5:00AM'),
(16, 34, 0.010631065800, 'May  3 2018  5:00AM'),
(16, 35, 0.307854166400, 'May  3 2018  5:00AM'),
(16, 36, 0.052603564000, 'May  3 2018  5:00AM'),
(16, 37, 9.229817377900, 'May  3 2018  5:00AM'),
(16, 40, 0.048846741200, 'May  3 2018  5:00AM'),
(16, 41, 0.955305628400, 'May  3 2018  5:00AM'),
(17, 1, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 2, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 3, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 4, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 5, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 6, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 7, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 8, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 9, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 10, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 11, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 12, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 13, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 14, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 16, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 18, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 19, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 20, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 21, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 23, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 24, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 26, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 27, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 28, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 29, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 30, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 31, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 32, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 33, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 34, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 35, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 36, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 37, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 40, 0.000000000000, 'May  3 2018  5:00AM'),
(17, 41, 0.000000000000, 'May  3 2018  5:00AM'),
(18, 1, 0.272294077600, 'May  3 2018  5:00AM'),
(18, 2, 0.349352080700, 'May  3 2018  5:00AM'),
(18, 3, 0.388029753200, 'May  3 2018  5:00AM'),
(18, 4, 0.362791160700, 'May  3 2018  5:00AM'),
(18, 5, 0.226869950100, 'May  3 2018  5:00AM'),
(18, 6, 5.169387190600, 'May  3 2018  5:00AM'),
(18, 7, 29.903507635600, 'May  3 2018  5:00AM'),
(18, 8, 0.199733387400, 'May  3 2018  5:00AM'),
(18, 9, 1.689867876500, 'May  3 2018  5:00AM'),
(18, 10, 2.198423722300, 'May  3 2018  5:00AM'),
(18, 11, 2.411769770900, 'May  3 2018  5:00AM'),
(18, 12, 2.137370034300, 'May  3 2018  5:00AM'),
(18, 13, 1.071675197700, 'May  3 2018  5:00AM'),
(18, 14, 0.363546434100, 'May  3 2018  5:00AM')
"@

$result = Execute-SQL -Query `
@"
INSERT INTO cv_system_db..t_currency_rate_system
VALUES
(18, 16, 18.159656377700, 'May  3 2018  5:00AM'),
(18, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(18, 18, 1.000000000000, 'May  3 2018  5:00AM'),
(18, 19, 1.731461205700, 'May  3 2018  5:00AM'),
(18, 20, 8.101496582900, 'May  3 2018  5:00AM'),
(18, 21, 293.028510523900, 'May  3 2018  5:00AM'),
(18, 23, 5.807854562400, 'May  3 2018  5:00AM'),
(18, 24, 0.271229107900, 'May  3 2018  5:00AM'),
(18, 26, 0.969587472800, 'May  3 2018  5:00AM'),
(18, 27, 1.021102791000, 'May  3 2018  5:00AM'),
(18, 28, 0.991150442500, 'May  3 2018  5:00AM'),
(18, 29, 0.102382573200, 'May  3 2018  5:00AM'),
(18, 30, 0.082275135400, 'May  3 2018  5:00AM'),
(18, 31, 0.104697072800, 'May  3 2018  5:00AM'),
(18, 32, 31.495436159400, 'May  3 2018  5:00AM'),
(18, 33, 4.804328006200, 'May  3 2018  5:00AM'),
(18, 34, 0.193056501000, 'May  3 2018  5:00AM'),
(18, 35, 5.590525876600, 'May  3 2018  5:00AM'),
(18, 36, 0.955262647200, 'May  3 2018  5:00AM'),
(18, 37, 167.610312012100, 'May  3 2018  5:00AM'),
(18, 40, 0.887040035400, 'May  3 2018  5:00AM'),
(18, 41, 17.348021946900, 'May  3 2018  5:00AM'),
(19, 1, 0.157262592300, 'May  3 2018  5:00AM'),
(19, 2, 0.201767200800, 'May  3 2018  5:00AM'),
(19, 3, 0.224105369500, 'May  3 2018  5:00AM'),
(19, 4, 0.209528899400, 'May  3 2018  5:00AM'),
(19, 5, 0.131028029600, 'May  3 2018  5:00AM'),
(19, 6, 2.985563392200, 'May  3 2018  5:00AM'),
(19, 7, 17.270677239400, 'May  3 2018  5:00AM'),
(19, 8, 0.115355392800, 'May  3 2018  5:00AM'),
(19, 9, 0.975977902900, 'May  3 2018  5:00AM'),
(19, 10, 1.269692740000, 'May  3 2018  5:00AM'),
(19, 11, 1.392910082600, 'May  3 2018  5:00AM'),
(19, 12, 1.234431373500, 'May  3 2018  5:00AM'),
(19, 13, 0.618942656200, 'May  3 2018  5:00AM'),
(19, 14, 0.209965105200, 'May  3 2018  5:00AM'),
(19, 16, 10.488052702700, 'May  3 2018  5:00AM'),
(19, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(19, 18, 0.577546870100, 'May  3 2018  5:00AM'),
(19, 19, 1.000000000000, 'May  3 2018  5:00AM'),
(19, 20, 4.678993994400, 'May  3 2018  5:00AM'),
(19, 21, 169.237699098000, 'May  3 2018  5:00AM'),
(19, 23, 3.354308224400, 'May  3 2018  5:00AM'),
(19, 24, 0.156647522400, 'May  3 2018  5:00AM'),
(19, 26, 0.559982210200, 'May  3 2018  5:00AM'),
(19, 27, 0.589734721000, 'May  3 2018  5:00AM'),
(19, 28, 0.572435835800, 'May  3 2018  5:00AM'),
(19, 29, 0.059130734700, 'May  3 2018  5:00AM'),
(19, 30, 0.047517747000, 'May  3 2018  5:00AM'),
(19, 31, 0.060467466700, 'May  3 2018  5:00AM'),
(19, 32, 18.190090575700, 'May  3 2018  5:00AM'),
(19, 33, 2.774724602800, 'May  3 2018  5:00AM'),
(19, 34, 0.111499177900, 'May  3 2018  5:00AM'),
(19, 35, 3.228790722100, 'May  3 2018  5:00AM'),
(19, 36, 0.551708952000, 'May  3 2018  5:00AM'),
(19, 37, 96.802811096100, 'May  3 2018  5:00AM'),
(19, 40, 0.512307196100, 'May  3 2018  5:00AM'),
(19, 41, 10.019295777600, 'May  3 2018  5:00AM'),
(20, 1, 0.033610342800, 'May  3 2018  5:00AM'),
(20, 2, 0.043121919200, 'May  3 2018  5:00AM'),
(20, 3, 0.047896058400, 'May  3 2018  5:00AM'),
(20, 4, 0.044780758300, 'May  3 2018  5:00AM'),
(20, 5, 0.028003461800, 'May  3 2018  5:00AM'),
(20, 6, 0.638078056000, 'May  3 2018  5:00AM'),
(20, 7, 3.691109084600, 'May  3 2018  5:00AM'),
(20, 8, 0.024653887800, 'May  3 2018  5:00AM'),
(20, 9, 0.208587124500, 'May  3 2018  5:00AM'),
(20, 10, 0.271360198700, 'May  3 2018  5:00AM'),
(20, 11, 0.297694351400, 'May  3 2018  5:00AM'),
(20, 12, 0.263824098700, 'May  3 2018  5:00AM'),
(20, 13, 0.132281139300, 'May  3 2018  5:00AM'),
(20, 14, 0.044873984800, 'May  3 2018  5:00AM'),
(20, 16, 2.241518735700, 'May  3 2018  5:00AM'),
(20, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(20, 18, 0.123433984100, 'May  3 2018  5:00AM'),
(20, 19, 0.213721154800, 'May  3 2018  5:00AM'),
(20, 20, 1.000000000000, 'May  3 2018  5:00AM'),
(20, 21, 36.169676494500, 'May  3 2018  5:00AM'),
(20, 23, 0.716886627400, 'May  3 2018  5:00AM'),
(20, 24, 0.033478889400, 'May  3 2018  5:00AM'),
(20, 26, 0.119680044700, 'May  3 2018  5:00AM'),
(20, 27, 0.126038785600, 'May  3 2018  5:00AM'),
(20, 28, 0.122341647900, 'May  3 2018  5:00AM'),
(20, 29, 0.012637488900, 'May  3 2018  5:00AM'),
(20, 30, 0.010155547800, 'May  3 2018  5:00AM'),
(20, 31, 0.012923176800, 'May  3 2018  5:00AM'),
(20, 32, 3.887607164600, 'May  3 2018  5:00AM'),
(20, 33, 0.593017346500, 'May  3 2018  5:00AM'),
(20, 34, 0.023829733100, 'May  3 2018  5:00AM'),
(20, 35, 0.690060881900, 'May  3 2018  5:00AM'),
(20, 36, 0.117911874400, 'May  3 2018  5:00AM'),
(20, 37, 20.688808579700, 'May  3 2018  5:00AM'),
(20, 40, 0.109490885600, 'May  3 2018  5:00AM'),
(20, 41, 2.141335464300, 'May  3 2018  5:00AM'),
(21, 1, 0.000929240900, 'May  3 2018  5:00AM'),
(21, 2, 0.001192211900, 'May  3 2018  5:00AM'),
(21, 3, 0.001324204800, 'May  3 2018  5:00AM'),
(21, 4, 0.001238074600, 'May  3 2018  5:00AM'),
(21, 5, 0.000774224800, 'May  3 2018  5:00AM'),
(21, 6, 0.017641243100, 'May  3 2018  5:00AM'),
(21, 7, 0.102049823000, 'May  3 2018  5:00AM'),
(21, 8, 0.000681617600, 'May  3 2018  5:00AM'),
(21, 9, 0.005766906000, 'May  3 2018  5:00AM'),
(21, 10, 0.007502422600, 'May  3 2018  5:00AM'),
(21, 11, 0.008230495300, 'May  3 2018  5:00AM'),
(21, 12, 0.007294068500, 'May  3 2018  5:00AM'),
(21, 13, 0.003657238700, 'May  3 2018  5:00AM'),
(21, 14, 0.001240652100, 'May  3 2018  5:00AM'),
(21, 16, 0.061972319200, 'May  3 2018  5:00AM'),
(21, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(21, 18, 0.003412637200, 'May  3 2018  5:00AM'),
(21, 19, 0.005908848900, 'May  3 2018  5:00AM'),
(21, 20, 0.027647468700, 'May  3 2018  5:00AM'),
(21, 21, 1.000000000000, 'May  3 2018  5:00AM'),
(21, 23, 0.019820100600, 'May  3 2018  5:00AM'),
(21, 24, 0.000925606500, 'May  3 2018  5:00AM'),
(21, 26, 0.003308850300, 'May  3 2018  5:00AM'),
(21, 27, 0.003484653400, 'May  3 2018  5:00AM'),
(21, 28, 0.003382436900, 'May  3 2018  5:00AM'),
(21, 29, 0.000349394600, 'May  3 2018  5:00AM'),
(21, 30, 0.000280775200, 'May  3 2018  5:00AM'),
(21, 31, 0.000357293100, 'May  3 2018  5:00AM'),
(21, 32, 0.107482497500, 'May  3 2018  5:00AM'),
(21, 33, 0.016395428500, 'May  3 2018  5:00AM'),
(21, 34, 0.000658831800, 'May  3 2018  5:00AM'),
(21, 35, 0.019078436700, 'May  3 2018  5:00AM'),
(21, 36, 0.003259964900, 'May  3 2018  5:00AM'),
(21, 37, 0.571993188400, 'May  3 2018  5:00AM'),
(21, 40, 0.003027145800, 'May  3 2018  5:00AM'),
(21, 41, 0.059202505300, 'May  3 2018  5:00AM'),
(23, 1, 0.046883763100, 'May  3 2018  5:00AM'),
(23, 2, 0.060151657900, 'May  3 2018  5:00AM'),
(23, 3, 0.066811203500, 'May  3 2018  5:00AM'),
(23, 4, 0.062465607000, 'May  3 2018  5:00AM'),
(23, 5, 0.039062608700, 'May  3 2018  5:00AM'),
(23, 6, 0.890068292000, 'May  3 2018  5:00AM'),
(23, 7, 5.148804487800, 'May  3 2018  5:00AM'),
(23, 8, 0.034390218500, 'May  3 2018  5:00AM'),
(23, 9, 0.290962498900, 'May  3 2018  5:00AM'),
(23, 10, 0.378525959800, 'May  3 2018  5:00AM'),
(23, 11, 0.415260014700, 'May  3 2018  5:00AM'),
(23, 12, 0.368013697900, 'May  3 2018  5:00AM'),
(23, 13, 0.184521700100, 'May  3 2018  5:00AM'),
(23, 14, 0.062595650500, 'May  3 2018  5:00AM'),
(23, 16, 3.126740895900, 'May  3 2018  5:00AM'),
(23, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(23, 18, 0.172180620100, 'May  3 2018  5:00AM'),
(23, 19, 0.298124064100, 'May  3 2018  5:00AM'),
(23, 20, 1.394920705400, 'May  3 2018  5:00AM'),
(23, 21, 50.453830648600, 'May  3 2018  5:00AM'),
(23, 23, 1.000000000000, 'May  3 2018  5:00AM'),
(23, 24, 0.046700396000, 'May  3 2018  5:00AM'),
(23, 26, 0.166944172300, 'May  3 2018  5:00AM'),
(23, 27, 0.175814111700, 'May  3 2018  5:00AM'),
(23, 28, 0.170656897800, 'May  3 2018  5:00AM'),
(23, 29, 0.017628294900, 'May  3 2018  5:00AM'),
(23, 30, 0.014166183800, 'May  3 2018  5:00AM'),
(23, 31, 0.018026806900, 'May  3 2018  5:00AM'),
(23, 32, 5.422903728200, 'May  3 2018  5:00AM'),
(23, 33, 0.827212175300, 'May  3 2018  5:00AM'),
(23, 34, 0.033240588100, 'May  3 2018  5:00AM'),
(23, 35, 0.962580212100, 'May  3 2018  5:00AM'),
(23, 36, 0.164477715000, 'May  3 2018  5:00AM'),
(23, 37, 28.859247457100, 'May  3 2018  5:00AM'),
(23, 40, 0.152731103300, 'May  3 2018  5:00AM'),
(23, 41, 2.986993176300, 'May  3 2018  5:00AM'),
(24, 1, 1.003926457900, 'May  3 2018  5:00AM'),
(24, 2, 1.288033144100, 'May  3 2018  5:00AM'),
(24, 3, 1.430634625400, 'May  3 2018  5:00AM'),
(24, 4, 1.337581956000, 'May  3 2018  5:00AM'),
(24, 5, 0.836451337400, 'May  3 2018  5:00AM'),
(24, 6, 19.059116589500, 'May  3 2018  5:00AM'),
(24, 7, 110.251837876300, 'May  3 2018  5:00AM'),
(24, 8, 0.736401004100, 'May  3 2018  5:00AM'),
(24, 9, 6.230407530300, 'May  3 2018  5:00AM'),
(24, 10, 8.105412206900, 'May  3 2018  5:00AM'),
(24, 11, 8.892002002600, 'May  3 2018  5:00AM'),
(24, 12, 7.880312148300, 'May  3 2018  5:00AM'),
(24, 13, 3.951180630400, 'May  3 2018  5:00AM'),
(24, 14, 1.340366588500, 'May  3 2018  5:00AM'),
(24, 16, 66.953198776500, 'May  3 2018  5:00AM'),
(24, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(24, 18, 3.686919916500, 'May  3 2018  5:00AM'),
(24, 19, 6.383758803900, 'May  3 2018  5:00AM'),
(24, 20, 29.869569105200, 'May  3 2018  5:00AM'),
(24, 21, 1080.372651565000, 'May  3 2018  5:00AM'),
(24, 23, 21.413094658600, 'May  3 2018  5:00AM'),
(24, 24, 1.000000000000, 'May  3 2018  5:00AM'),
(24, 26, 3.574791364400, 'May  3 2018  5:00AM'),
(24, 27, 3.764724217000, 'May  3 2018  5:00AM'),
(24, 28, 3.654292306700, 'May  3 2018  5:00AM'),
(24, 29, 0.377476348200, 'May  3 2018  5:00AM'),
(24, 30, 0.303341835500, 'May  3 2018  5:00AM'),
(24, 31, 0.386009723100, 'May  3 2018  5:00AM'),
(24, 32, 116.121150856100, 'May  3 2018  5:00AM'),
(24, 33, 17.713172611600, 'May  3 2018  5:00AM'),
(24, 34, 0.711783858600, 'May  3 2018  5:00AM'),
(24, 35, 20.611821198300, 'May  3 2018  5:00AM'),
(24, 36, 3.521976879600, 'May  3 2018  5:00AM'),
(24, 37, 617.965797575100, 'May  3 2018  5:00AM'),
(24, 40, 3.270445573300, 'May  3 2018  5:00AM'),
(24, 41, 63.960767628700, 'May  3 2018  5:00AM'),
(26, 1, 0.280834979000, 'May  3 2018  5:00AM'),
(26, 2, 0.360310018900, 'May  3 2018  5:00AM'),
(26, 3, 0.400200873100, 'May  3 2018  5:00AM'),
(26, 4, 0.374170635300, 'May  3 2018  5:00AM'),
(26, 5, 0.233986057400, 'May  3 2018  5:00AM'),
(26, 6, 5.331532569700, 'May  3 2018  5:00AM'),
(26, 7, 30.841474826500, 'May  3 2018  5:00AM'),
(26, 8, 0.205998316800, 'May  3 2018  5:00AM'),
(26, 9, 1.742873050500, 'May  3 2018  5:00AM'),
(26, 10, 2.267380493200, 'May  3 2018  5:00AM'),
(26, 11, 2.487418452200, 'May  3 2018  5:00AM'),
(26, 12, 2.204411767000, 'May  3 2018  5:00AM'),
(26, 13, 1.105289855400, 'May  3 2018  5:00AM'),
(26, 14, 0.374949599000, 'May  3 2018  5:00AM'),
(26, 16, 18.729260522000, 'May  3 2018  5:00AM'),
(26, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(26, 18, 1.031366460500, 'May  3 2018  5:00AM'),
(26, 19, 1.785771015200, 'May  3 2018  5:00AM'),
(26, 20, 8.355611855400, 'May  3 2018  5:00AM'),
(26, 21, 302.219777722600, 'May  3 2018  5:00AM'),
(26, 23, 5.990026403100, 'May  3 2018  5:00AM'),
(26, 24, 0.279736605000, 'May  3 2018  5:00AM'),
(26, 26, 1.000000000000, 'May  3 2018  5:00AM'),
(26, 27, 1.053131171400, 'May  3 2018  5:00AM'),
(26, 28, 1.022239323700, 'May  3 2018  5:00AM'),
(26, 29, 0.105593952100, 'May  3 2018  5:00AM'),
(26, 30, 0.084855815200, 'May  3 2018  5:00AM'),
(26, 31, 0.107981049400, 'May  3 2018  5:00AM'),
(26, 32, 32.483336513400, 'May  3 2018  5:00AM'),
(26, 33, 4.955022770800, 'May  3 2018  5:00AM'),
(26, 34, 0.199112000100, 'May  3 2018  5:00AM'),
(26, 35, 5.765880885600, 'May  3 2018  5:00AM'),
(26, 36, 0.985225855300, 'May  3 2018  5:00AM'),
(26, 37, 172.867654242000, 'May  3 2018  5:00AM'),
(26, 40, 0.914863341600, 'May  3 2018  5:00AM'),
(26, 41, 17.892167992000, 'May  3 2018  5:00AM'),
(27, 1, 0.266666666700, 'May  3 2018  5:00AM'),
(27, 2, 0.342132137700, 'May  3 2018  5:00AM'),
(27, 3, 0.380010471700, 'May  3 2018  5:00AM'),
(27, 4, 0.355293476700, 'May  3 2018  5:00AM'),
(27, 5, 0.222181304500, 'May  3 2018  5:00AM'),
(27, 6, 5.062553188700, 'May  3 2018  5:00AM'),
(27, 7, 29.285501811200, 'May  3 2018  5:00AM'),
(27, 8, 0.195605564100, 'May  3 2018  5:00AM'),
(27, 9, 1.654943940400, 'May  3 2018  5:00AM'),
(27, 10, 2.152989632100, 'May  3 2018  5:00AM'),
(27, 11, 2.361926529000, 'May  3 2018  5:00AM'),
(27, 12, 2.093197720200, 'May  3 2018  5:00AM'),
(27, 13, 1.049527243600, 'May  3 2018  5:00AM'),
(27, 14, 0.356033141100, 'May  3 2018  5:00AM'),
(27, 16, 17.784356812600, 'May  3 2018  5:00AM'),
(27, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(27, 18, 0.979333333300, 'May  3 2018  5:00AM'),
(27, 19, 1.695677674100, 'May  3 2018  5:00AM'),
(27, 20, 7.934065653500, 'May  3 2018  5:00AM'),
(27, 21, 286.972587973100, 'May  3 2018  5:00AM'),
(27, 23, 5.687825568100, 'May  3 2018  5:00AM'),
(27, 24, 0.265623706400, 'May  3 2018  5:00AM'),
(27, 26, 0.949549331700, 'May  3 2018  5:00AM'),
(27, 27, 1.000000000000, 'May  3 2018  5:00AM'),
(27, 28, 0.970666666700, 'May  3 2018  5:00AM'),
(27, 29, 0.100266666700, 'May  3 2018  5:00AM'),
(27, 30, 0.080574782600, 'May  3 2018  5:00AM'),
(27, 31, 0.102533333300, 'May  3 2018  5:00AM'),
(27, 32, 30.844530478700, 'May  3 2018  5:00AM'),
(27, 33, 4.705038560700, 'May  3 2018  5:00AM'),
(27, 34, 0.189066666700, 'May  3 2018  5:00AM'),
(27, 35, 5.474988341800, 'May  3 2018  5:00AM'),
(27, 36, 0.935520552500, 'May  3 2018  5:00AM'),
(27, 37, 164.146365563800, 'May  3 2018  5:00AM'),
(27, 40, 0.868707874700, 'May  3 2018  5:00AM'),
(27, 41, 16.989496160000, 'May  3 2018  5:00AM'),
(28, 1, 0.274725274700, 'May  3 2018  5:00AM'),
(28, 2, 0.352471295700, 'May  3 2018  5:00AM'),
(28, 3, 0.391494304600, 'May  3 2018  5:00AM'),
(28, 4, 0.366030367500, 'May  3 2018  5:00AM'),
(28, 5, 0.228895574600, 'May  3 2018  5:00AM'),
(28, 6, 5.215542433400, 'May  3 2018  5:00AM'),
(28, 7, 30.170503239500, 'May  3 2018  5:00AM'),
(28, 8, 0.201516721200, 'May  3 2018  5:00AM'),
(28, 9, 1.704955982600, 'May  3 2018  5:00AM'),
(28, 10, 2.218052505600, 'May  3 2018  5:00AM'),
(28, 11, 2.433303429600, 'May  3 2018  5:00AM'),
(28, 12, 2.156453695300, 'May  3 2018  5:00AM'),
(28, 13, 1.081243726200, 'May  3 2018  5:00AM'),
(28, 14, 0.366792384400, 'May  3 2018  5:00AM'),
(28, 16, 18.321796166800, 'May  3 2018  5:00AM'),
(28, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(28, 18, 1.008928571400, 'May  3 2018  5:00AM'),
(28, 19, 1.746920680700, 'May  3 2018  5:00AM'),
(28, 20, 8.173831373800, 'May  3 2018  5:00AM'),
(28, 21, 295.644836510700, 'May  3 2018  5:00AM'),
(28, 23, 5.859710406700, 'May  3 2018  5:00AM'),
(28, 24, 0.273650796400, 'May  3 2018  5:00AM'),
(28, 26, 0.978244503800, 'May  3 2018  5:00AM'),
(28, 27, 1.030219780200, 'May  3 2018  5:00AM'),
(28, 28, 1.000000000000, 'May  3 2018  5:00AM'),
(28, 29, 0.103296703300, 'May  3 2018  5:00AM'),
(28, 30, 0.083009734900, 'May  3 2018  5:00AM'),
(28, 31, 0.105631868100, 'May  3 2018  5:00AM'),
(28, 32, 31.776645410800, 'May  3 2018  5:00AM'),
(28, 33, 4.847223792000, 'May  3 2018  5:00AM'),
(28, 34, 0.194780219800, 'May  3 2018  5:00AM'),
(28, 35, 5.640441286200, 'May  3 2018  5:00AM'),
(28, 36, 0.963791778000, 'May  3 2018  5:00AM'),
(28, 37, 169.106832655100, 'May  3 2018  5:00AM'),
(28, 40, 0.894960035700, 'May  3 2018  5:00AM'),
(28, 41, 17.502915000000, 'May  3 2018  5:00AM'),
(29, 1, 2.659574468100, 'May  3 2018  5:00AM'),
(29, 2, 3.412222117800, 'May  3 2018  5:00AM'),
(29, 3, 3.789998055100, 'May  3 2018  5:00AM'),
(29, 4, 3.543485472600, 'May  3 2018  5:00AM'),
(29, 5, 2.215903967300, 'May  3 2018  5:00AM'),
(29, 6, 50.490889514900, 'May  3 2018  5:00AM'),
(29, 7, 292.076148382700, 'May  3 2018  5:00AM'),
(29, 8, 1.950853365200, 'May  3 2018  5:00AM'),
(29, 9, 16.505424937800, 'May  3 2018  5:00AM'),
(29, 10, 21.472635958200, 'May  3 2018  5:00AM'),
(29, 11, 23.556448095200, 'May  3 2018  5:00AM'),
(29, 12, 20.876307050000, 'May  3 2018  5:00AM'),
(29, 13, 10.467359477400, 'May  3 2018  5:00AM'),
(29, 14, 3.550862444900, 'May  3 2018  5:00AM'),
(29, 16, 177.370579912500, 'May  3 2018  5:00AM'),
(29, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(29, 18, 9.767287234000, 'May  3 2018  5:00AM'),
(29, 19, 16.911678930300, 'May  3 2018  5:00AM'),
(29, 20, 79.129644150500, 'May  3 2018  5:00AM'),
(29, 21, 2862.093630050800, 'May  3 2018  5:00AM'),
(29, 23, 56.726983724700, 'May  3 2018  5:00AM'),
(29, 24, 2.649172603500, 'May  3 2018  5:00AM'),
(29, 26, 9.470239345700, 'May  3 2018  5:00AM'),
(29, 27, 9.973404255300, 'May  3 2018  5:00AM'),
(29, 28, 9.680851063800, 'May  3 2018  5:00AM'),
(29, 29, 1.000000000000, 'May  3 2018  5:00AM'),
(29, 30, 0.803604880100, 'May  3 2018  5:00AM'),
(29, 31, 1.022606383000, 'May  3 2018  5:00AM'),
(29, 32, 307.624971530100, 'May  3 2018  5:00AM'),
(29, 33, 46.925251602900, 'May  3 2018  5:00AM'),
(29, 34, 1.885638297900, 'May  3 2018  5:00AM'),
(29, 35, 54.604272025800, 'May  3 2018  5:00AM'),
(29, 36, 9.330324659600, 'May  3 2018  5:00AM'),
(29, 37, 1637.098060809600, 'May  3 2018  5:00AM'),
(29, 40, 8.663974813800, 'May  3 2018  5:00AM'),
(29, 41, 169.443113298100, 'May  3 2018  5:00AM'),
(30, 1, 3.309554899600, 'May  3 2018  5:00AM'),
(30, 2, 4.246144097100, 'May  3 2018  5:00AM'),
(30, 3, 4.716245693800, 'May  3 2018  5:00AM'),
(30, 4, 4.409487250000, 'May  3 2018  5:00AM'),
(30, 5, 2.757454592800, 'May  3 2018  5:00AM'),
(30, 6, 62.830491412100, 'May  3 2018  5:00AM'),
(30, 7, 363.457410018900, 'May  3 2018  5:00AM'),
(30, 8, 2.427627573700, 'May  3 2018  5:00AM'),
(30, 9, 20.539229349500, 'May  3 2018  5:00AM'),
(30, 10, 26.720390195800, 'May  3 2018  5:00AM'),
(30, 11, 29.313470686800, 'May  3 2018  5:00AM'),
(30, 12, 25.978322890000, 'May  3 2018  5:00AM'),
(30, 13, 13.025505117300, 'May  3 2018  5:00AM'),
(30, 14, 4.418667100100, 'May  3 2018  5:00AM'),
(30, 16, 220.718644591600, 'May  3 2018  5:00AM'),
(30, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(30, 18, 12.154340368600, 'May  3 2018  5:00AM'),
(30, 19, 21.044768828700, 'May  3 2018  5:00AM'),
(30, 20, 98.468346963400, 'May  3 2018  5:00AM'),
(30, 21, 3561.568254614600, 'May  3 2018  5:00AM'),
(30, 23, 70.590641163100, 'May  3 2018  5:00AM'),
(30, 24, 3.296610895700, 'May  3 2018  5:00AM'),
(30, 26, 11.784696162000, 'May  3 2018  5:00AM'),
(30, 27, 12.410830873300, 'May  3 2018  5:00AM'),
(30, 28, 12.046779834400, 'May  3 2018  5:00AM'),
(30, 29, 1.244392642200, 'May  3 2018  5:00AM'),
(30, 30, 1.000000000000, 'May  3 2018  5:00AM'),
(30, 31, 1.272523858900, 'May  3 2018  5:00AM'),
(30, 32, 382.806251138900, 'May  3 2018  5:00AM'),
(30, 33, 58.393437829600, 'May  3 2018  5:00AM'),
(30, 34, 2.346474423800, 'May  3 2018  5:00AM'),
(30, 35, 67.949154343300, 'May  3 2018  5:00AM'),
(30, 36, 11.610587356000, 'May  3 2018  5:00AM'),
(30, 37, 2037.192781483900, 'May  3 2018  5:00AM'),
(30, 40, 10.781386510800, 'May  3 2018  5:00AM'),
(30, 41, 210.853763465100, 'May  3 2018  5:00AM'),
(31, 1, 2.600780234100, 'May  3 2018  5:00AM'),
(31, 2, 3.336789379200, 'May  3 2018  5:00AM'),
(31, 3, 3.706213962800, 'May  3 2018  5:00AM'),
(31, 4, 3.465150943300, 'May  3 2018  5:00AM'),
(31, 5, 2.166917793800, 'May  3 2018  5:00AM'),
(31, 6, 49.374706001600, 'May  3 2018  5:00AM'),
(31, 7, 285.619328457500, 'May  3 2018  5:00AM'),
(31, 8, 1.907726567800, 'May  3 2018  5:00AM'),
(31, 9, 16.140545582800, 'May  3 2018  5:00AM'),
(31, 10, 20.997948297300, 'May  3 2018  5:00AM'),
(31, 11, 23.035694366200, 'May  3 2018  5:00AM'),
(31, 12, 20.414802212700, 'May  3 2018  5:00AM'),
(31, 13, 10.235961413500, 'May  3 2018  5:00AM')
"@

$result = Execute-SQL -Query `
@"
INSERT INTO cv_system_db..t_currency_rate_system
VALUES
(31, 14, 3.472364835600, 'May  3 2018  5:00AM'),
(31, 16, 173.449513776600, 'May  3 2018  5:00AM'),
(31, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(31, 18, 9.551365409600, 'May  3 2018  5:00AM'),
(31, 19, 16.537818667900, 'May  3 2018  5:00AM'),
(31, 20, 77.380354227800, 'May  3 2018  5:00AM'),
(31, 21, 2798.822379451500, 'May  3 2018  5:00AM'),
(31, 23, 55.472941171700, 'May  3 2018  5:00AM'),
(31, 24, 2.590608319600, 'May  3 2018  5:00AM'),
(31, 26, 9.260884249700, 'May  3 2018  5:00AM'),
(31, 27, 9.752925877800, 'May  3 2018  5:00AM'),
(31, 28, 9.466840052000, 'May  3 2018  5:00AM'),
(31, 29, 0.977893368000, 'May  3 2018  5:00AM'),
(31, 30, 0.785839882700, 'May  3 2018  5:00AM'),
(31, 31, 1.000000000000, 'May  3 2018  5:00AM'),
(31, 32, 300.824419493600, 'May  3 2018  5:00AM'),
(31, 33, 45.887892334700, 'May  3 2018  5:00AM'),
(31, 34, 1.843953186000, 'May  3 2018  5:00AM'),
(31, 35, 53.397155479100, 'May  3 2018  5:00AM'),
(31, 36, 9.124062606000, 'May  3 2018  5:00AM'),
(31, 37, 1600.907336448400, 'May  3 2018  5:00AM'),
(31, 40, 8.472443511100, 'May  3 2018  5:00AM'),
(31, 41, 165.697296749300, 'May  3 2018  5:00AM'),
(32, 1, 0.008645509000, 'May  3 2018  5:00AM'),
(32, 2, 0.011092149300, 'May  3 2018  5:00AM'),
(32, 3, 0.012320189900, 'May  3 2018  5:00AM'),
(32, 4, 0.011518848600, 'May  3 2018  5:00AM'),
(32, 5, 0.007203264300, 'May  3 2018  5:00AM'),
(32, 6, 0.164131309800, 'May  3 2018  5:00AM'),
(32, 7, 0.949455263400, 'May  3 2018  5:00AM'),
(32, 8, 0.006341661300, 'May  3 2018  5:00AM'),
(32, 9, 0.053654372900, 'May  3 2018  5:00AM'),
(32, 10, 0.069801342400, 'May  3 2018  5:00AM'),
(32, 11, 0.076575214200, 'May  3 2018  5:00AM'),
(32, 12, 0.067862849200, 'May  3 2018  5:00AM'),
(32, 13, 0.034026364700, 'May  3 2018  5:00AM'),
(32, 14, 0.011542829000, 'May  3 2018  5:00AM'),
(32, 16, 0.576580565100, 'May  3 2018  5:00AM'),
(32, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(32, 18, 0.031750631900, 'May  3 2018  5:00AM'),
(32, 19, 0.054974987400, 'May  3 2018  5:00AM'),
(32, 20, 0.257227635800, 'May  3 2018  5:00AM'),
(32, 21, 9.303840373600, 'May  3 2018  5:00AM'),
(32, 23, 0.184403052300, 'May  3 2018  5:00AM'),
(32, 24, 0.008611695600, 'May  3 2018  5:00AM'),
(32, 26, 0.030785014900, 'May  3 2018  5:00AM'),
(32, 27, 0.032420658800, 'May  3 2018  5:00AM'),
(32, 28, 0.031469652900, 'May  3 2018  5:00AM'),
(32, 29, 0.003250711400, 'May  3 2018  5:00AM'),
(32, 30, 0.002612287500, 'May  3 2018  5:00AM'),
(32, 31, 0.003324198200, 'May  3 2018  5:00AM'),
(32, 32, 1.000000000000, 'May  3 2018  5:00AM'),
(32, 33, 0.152540450000, 'May  3 2018  5:00AM'),
(32, 34, 0.006129665900, 'May  3 2018  5:00AM'),
(32, 35, 0.177502729200, 'May  3 2018  5:00AM'),
(32, 36, 0.030330192700, 'May  3 2018  5:00AM'),
(32, 37, 5.321733319200, 'May  3 2018  5:00AM'),
(32, 40, 0.028164081600, 'May  3 2018  5:00AM'),
(32, 41, 0.550810659000, 'May  3 2018  5:00AM'),
(33, 1, 0.056676829200, 'May  3 2018  5:00AM'),
(33, 2, 0.072716117700, 'May  3 2018  5:00AM'),
(33, 3, 0.080766707200, 'May  3 2018  5:00AM'),
(33, 4, 0.075513403800, 'May  3 2018  5:00AM'),
(33, 5, 0.047221994400, 'May  3 2018  5:00AM'),
(33, 6, 1.075985483100, 'May  3 2018  5:00AM'),
(33, 7, 6.224285185600, 'May  3 2018  5:00AM'),
(33, 8, 0.041573636800, 'May  3 2018  5:00AM'),
(33, 9, 0.351738656100, 'May  3 2018  5:00AM'),
(33, 10, 0.457592345800, 'May  3 2018  5:00AM'),
(33, 11, 0.501999398800, 'May  3 2018  5:00AM'),
(33, 12, 0.444884285900, 'May  3 2018  5:00AM'),
(33, 13, 0.223064536000, 'May  3 2018  5:00AM'),
(33, 14, 0.075670610700, 'May  3 2018  5:00AM'),
(33, 16, 3.779853572500, 'May  3 2018  5:00AM'),
(33, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(33, 18, 0.208145655100, 'May  3 2018  5:00AM'),
(33, 19, 0.360396126900, 'May  3 2018  5:00AM'),
(33, 20, 1.686291313300, 'May  3 2018  5:00AM'),
(33, 21, 60.992611276100, 'May  3 2018  5:00AM'),
(33, 23, 1.208879692400, 'May  3 2018  5:00AM'),
(33, 24, 0.056455160300, 'May  3 2018  5:00AM'),
(33, 26, 0.201815419700, 'May  3 2018  5:00AM'),
(33, 27, 0.212538109300, 'May  3 2018  5:00AM'),
(33, 28, 0.206303658100, 'May  3 2018  5:00AM'),
(33, 29, 0.021310487800, 'May  3 2018  5:00AM'),
(33, 30, 0.017125212000, 'May  3 2018  5:00AM'),
(33, 31, 0.021792240800, 'May  3 2018  5:00AM'),
(33, 32, 6.555638191000, 'May  3 2018  5:00AM'),
(33, 33, 1.000000000000, 'May  3 2018  5:00AM'),
(33, 34, 0.040183871900, 'May  3 2018  5:00AM'),
(33, 35, 1.163643670700, 'May  3 2018  5:00AM'),
(33, 36, 0.198833769500, 'May  3 2018  5:00AM'),
(33, 37, 34.887358189600, 'May  3 2018  5:00AM'),
(33, 40, 0.184633529200, 'May  3 2018  5:00AM'),
(33, 41, 3.610915392200, 'May  3 2018  5:00AM'),
(34, 1, 1.410437235500, 'May  3 2018  5:00AM'),
(34, 2, 1.809584649200, 'May  3 2018  5:00AM'),
(34, 3, 2.009928446700, 'May  3 2018  5:00AM'),
(34, 4, 1.879196809200, 'May  3 2018  5:00AM'),
(34, 5, 1.175147943200, 'May  3 2018  5:00AM'),
(34, 6, 26.776550715900, 'May  3 2018  5:00AM'),
(34, 7, 154.895108310200, 'May  3 2018  5:00AM'),
(34, 8, 1.034585141500, 'May  3 2018  5:00AM'),
(34, 9, 8.753229586200, 'May  3 2018  5:00AM'),
(34, 10, 11.387462793100, 'May  3 2018  5:00AM'),
(34, 11, 12.492559215500, 'May  3 2018  5:00AM'),
(34, 12, 11.071215022300, 'May  3 2018  5:00AM'),
(34, 13, 5.551096140300, 'May  3 2018  5:00AM'),
(34, 14, 1.883108997600, 'May  3 2018  5:00AM'),
(34, 16, 94.063946469800, 'May  3 2018  5:00AM'),
(34, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(34, 18, 5.179830747500, 'May  3 2018  5:00AM'),
(34, 19, 8.968675991300, 'May  3 2018  5:00AM'),
(34, 20, 41.964381101000, 'May  3 2018  5:00AM'),
(34, 21, 1517.838088715200, 'May  3 2018  5:00AM'),
(34, 23, 30.083703639600, 'May  3 2018  5:00AM'),
(34, 24, 1.404920872900, 'May  3 2018  5:00AM'),
(34, 26, 5.022299004200, 'May  3 2018  5:00AM'),
(34, 27, 5.289139633300, 'May  3 2018  5:00AM'),
(34, 28, 5.133991537400, 'May  3 2018  5:00AM'),
(34, 29, 0.530324400600, 'May  3 2018  5:00AM'),
(34, 30, 0.426171276300, 'May  3 2018  5:00AM'),
(34, 31, 0.542313117100, 'May  3 2018  5:00AM'),
(34, 32, 163.141028625200, 'May  3 2018  5:00AM'),
(34, 33, 24.885605927600, 'May  3 2018  5:00AM'),
(34, 34, 1.000000000000, 'May  3 2018  5:00AM'),
(34, 35, 28.957977830300, 'May  3 2018  5:00AM'),
(34, 36, 4.948098832200, 'May  3 2018  5:00AM'),
(34, 37, 868.193047763600, 'May  3 2018  5:00AM'),
(34, 40, 4.594717249600, 'May  3 2018  5:00AM'),
(34, 41, 89.859817489600, 'May  3 2018  5:00AM'),
(35, 1, 0.048706344200, 'May  3 2018  5:00AM'),
(35, 2, 0.062490021200, 'May  3 2018  5:00AM'),
(35, 3, 0.069408453100, 'May  3 2018  5:00AM'),
(35, 4, 0.064893923900, 'May  3 2018  5:00AM'),
(35, 5, 0.040581146600, 'May  3 2018  5:00AM'),
(35, 6, 0.924669218000, 'May  3 2018  5:00AM'),
(35, 7, 5.348961492300, 'May  3 2018  5:00AM'),
(35, 8, 0.035727119700, 'May  3 2018  5:00AM'),
(35, 9, 0.302273509500, 'May  3 2018  5:00AM'),
(35, 10, 0.393240952800, 'May  3 2018  5:00AM'),
(35, 11, 0.431403024400, 'May  3 2018  5:00AM'),
(35, 12, 0.382320032400, 'May  3 2018  5:00AM'),
(35, 13, 0.191694881900, 'May  3 2018  5:00AM'),
(35, 14, 0.065029022700, 'May  3 2018  5:00AM'),
(35, 16, 3.248291266100, 'May  3 2018  5:00AM'),
(35, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(35, 18, 0.178874049100, 'May  3 2018  5:00AM'),
(35, 19, 0.309713476700, 'May  3 2018  5:00AM'),
(35, 20, 1.449147497300, 'May  3 2018  5:00AM'),
(35, 21, 52.415196171800, 'May  3 2018  5:00AM'),
(35, 23, 1.038874462000, 'May  3 2018  5:00AM'),
(35, 24, 0.048515848800, 'May  3 2018  5:00AM'),
(35, 26, 0.173434037200, 'May  3 2018  5:00AM'),
(35, 27, 0.182648790800, 'May  3 2018  5:00AM'),
(35, 28, 0.177291092900, 'May  3 2018  5:00AM'),
(35, 29, 0.018313585400, 'May  3 2018  5:00AM'),
(35, 30, 0.014716886600, 'May  3 2018  5:00AM'),
(35, 31, 0.018727589300, 'May  3 2018  5:00AM'),
(35, 32, 5.633716193200, 'May  3 2018  5:00AM'),
(35, 33, 0.859369603500, 'May  3 2018  5:00AM'),
(35, 34, 0.034532798000, 'May  3 2018  5:00AM'),
(35, 35, 1.000000000000, 'May  3 2018  5:00AM'),
(35, 36, 0.170871697600, 'May  3 2018  5:00AM'),
(35, 37, 29.981135176300, 'May  3 2018  5:00AM'),
(35, 40, 0.158668442800, 'May  3 2018  5:00AM'),
(35, 41, 3.103110929100, 'May  3 2018  5:00AM'),
(36, 1, 0.285046294200, 'May  3 2018  5:00AM'),
(36, 2, 0.365713117400, 'May  3 2018  5:00AM'),
(36, 3, 0.406202162700, 'May  3 2018  5:00AM'),
(36, 4, 0.379781583400, 'May  3 2018  5:00AM'),
(36, 5, 0.237494840500, 'May  3 2018  5:00AM'),
(36, 6, 5.411482596500, 'May  3 2018  5:00AM'),
(36, 7, 31.303964121200, 'May  3 2018  5:00AM'),
(36, 8, 0.209087404400, 'May  3 2018  5:00AM'),
(36, 9, 1.769008640100, 'May  3 2018  5:00AM'),
(36, 10, 2.301381435400, 'May  3 2018  5:00AM'),
(36, 11, 2.524719016200, 'May  3 2018  5:00AM'),
(36, 12, 2.237468449600, 'May  3 2018  5:00AM'),
(36, 13, 1.121864443000, 'May  3 2018  5:00AM'),
(36, 14, 0.380572228100, 'May  3 2018  5:00AM'),
(36, 16, 19.010118766900, 'May  3 2018  5:00AM'),
(36, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(36, 18, 1.046832515500, 'May  3 2018  5:00AM'),
(36, 19, 1.812549889500, 'May  3 2018  5:00AM'),
(36, 20, 8.480910047400, 'May  3 2018  5:00AM'),
(36, 21, 306.751772792200, 'May  3 2018  5:00AM'),
(36, 23, 6.079851001400, 'May  3 2018  5:00AM'),
(36, 24, 0.283931449300, 'May  3 2018  5:00AM'),
(36, 26, 1.014995693200, 'May  3 2018  5:00AM'),
(36, 27, 1.068923603300, 'May  3 2018  5:00AM'),
(36, 28, 1.037568511000, 'May  3 2018  5:00AM'),
(36, 29, 0.107177406600, 'May  3 2018  5:00AM'),
(36, 30, 0.086128287000, 'May  3 2018  5:00AM'),
(36, 31, 0.109600300100, 'May  3 2018  5:00AM'),
(36, 32, 32.970446662300, 'May  3 2018  5:00AM'),
(36, 33, 5.029326772100, 'May  3 2018  5:00AM'),
(36, 34, 0.202097822600, 'May  3 2018  5:00AM'),
(36, 35, 5.852344266500, 'May  3 2018  5:00AM'),
(36, 36, 1.000000000000, 'May  3 2018  5:00AM'),
(36, 37, 175.459924551500, 'May  3 2018  5:00AM'),
(36, 40, 0.928582351600, 'May  3 2018  5:00AM'),
(36, 41, 18.160473454100, 'May  3 2018  5:00AM'),
(37, 1, 0.001624566400, 'May  3 2018  5:00AM'),
(37, 2, 0.002084311400, 'May  3 2018  5:00AM'),
(37, 3, 0.002315070900, 'May  3 2018  5:00AM'),
(37, 4, 0.002164491900, 'May  3 2018  5:00AM'),
(37, 5, 0.001353556000, 'May  3 2018  5:00AM'),
(37, 6, 0.030841701400, 'May  3 2018  5:00AM'),
(37, 7, 0.178410906100, 'May  3 2018  5:00AM'),
(37, 8, 0.001191653300, 'May  3 2018  5:00AM'),
(37, 9, 0.010082123600, 'May  3 2018  5:00AM'),
(37, 10, 0.013116279600, 'May  3 2018  5:00AM'),
(37, 11, 0.014389149100, 'May  3 2018  5:00AM'),
(37, 12, 0.012752019900, 'May  3 2018  5:00AM'),
(37, 13, 0.006393850000, 'May  3 2018  5:00AM'),
(37, 14, 0.002168998000, 'May  3 2018  5:00AM'),
(37, 16, 0.108344505500, 'May  3 2018  5:00AM'),
(37, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(37, 18, 0.005966220000, 'May  3 2018  5:00AM'),
(37, 19, 0.010330278500, 'May  3 2018  5:00AM'),
(37, 20, 0.048335311100, 'May  3 2018  5:00AM'),
(37, 21, 1.748272567500, 'May  3 2018  5:00AM'),
(37, 23, 0.034650938200, 'May  3 2018  5:00AM'),
(37, 24, 0.001618212500, 'May  3 2018  5:00AM'),
(37, 26, 0.005784772200, 'May  3 2018  5:00AM'),
(37, 27, 0.006092123900, 'May  3 2018  5:00AM'),
(37, 28, 0.005913421600, 'May  3 2018  5:00AM'),
(37, 29, 0.000610837000, 'May  3 2018  5:00AM'),
(37, 30, 0.000490871600, 'May  3 2018  5:00AM'),
(37, 31, 0.000624645800, 'May  3 2018  5:00AM'),
(37, 32, 0.187908701900, 'May  3 2018  5:00AM'),
(37, 33, 0.028663678000, 'May  3 2018  5:00AM'),
(37, 34, 0.001151817600, 'May  3 2018  5:00AM'),
(37, 35, 0.033354307400, 'May  3 2018  5:00AM'),
(37, 36, 0.005699307100, 'May  3 2018  5:00AM'),
(37, 37, 1.000000000000, 'May  3 2018  5:00AM'),
(37, 40, 0.005292276000, 'May  3 2018  5:00AM'),
(37, 41, 0.103502115900, 'May  3 2018  5:00AM'),
(40, 1, 0.306969321300, 'May  3 2018  5:00AM'),
(40, 2, 0.393840262800, 'May  3 2018  5:00AM'),
(40, 3, 0.437443337100, 'May  3 2018  5:00AM'),
(40, 4, 0.408990740200, 'May  3 2018  5:00AM'),
(40, 5, 0.255760665800, 'May  3 2018  5:00AM'),
(40, 6, 5.827681935800, 'May  3 2018  5:00AM'),
(40, 7, 33.711564802400, 'May  3 2018  5:00AM'),
(40, 8, 0.225168402200, 'May  3 2018  5:00AM'),
(40, 9, 1.905063818000, 'May  3 2018  5:00AM'),
(40, 10, 2.478381622700, 'May  3 2018  5:00AM'),
(40, 11, 2.718896188100, 'May  3 2018  5:00AM'),
(40, 12, 2.409553063000, 'May  3 2018  5:00AM'),
(40, 13, 1.208147496100, 'May  3 2018  5:00AM'),
(40, 14, 0.409842193800, 'May  3 2018  5:00AM'),
(40, 16, 20.472194774800, 'May  3 2018  5:00AM'),
(40, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(40, 18, 1.127344832400, 'May  3 2018  5:00AM'),
(40, 19, 1.951953842600, 'May  3 2018  5:00AM'),
(40, 20, 9.133180307100, 'May  3 2018  5:00AM'),
(40, 21, 330.344177072400, 'May  3 2018  5:00AM'),
(40, 23, 6.547454828000, 'May  3 2018  5:00AM'),
(40, 24, 0.305768733200, 'May  3 2018  5:00AM'),
(40, 26, 1.093059427000, 'May  3 2018  5:00AM'),
(40, 27, 1.151134954800, 'May  3 2018  5:00AM'),
(40, 28, 1.117368329400, 'May  3 2018  5:00AM'),
(40, 29, 0.115420464800, 'May  3 2018  5:00AM'),
(40, 30, 0.092752448800, 'May  3 2018  5:00AM'),
(40, 31, 0.118029704000, 'May  3 2018  5:00AM'),
(40, 32, 35.506217197100, 'May  3 2018  5:00AM'),
(40, 33, 5.416134350700, 'May  3 2018  5:00AM'),
(40, 34, 0.217641248800, 'May  3 2018  5:00AM'),
(40, 35, 6.302450457100, 'May  3 2018  5:00AM'),
(40, 36, 1.076910408900, 'May  3 2018  5:00AM'),
(40, 37, 188.954619096600, 'May  3 2018  5:00AM'),
(40, 40, 1.000000000000, 'May  3 2018  5:00AM'),
(40, 41, 19.557202893500, 'May  3 2018  5:00AM'),
(41, 1, 0.015695972600, 'May  3 2018  5:00AM'),
(41, 2, 0.020137862500, 'May  3 2018  5:00AM'),
(41, 3, 0.022367377400, 'May  3 2018  5:00AM'),
(41, 4, 0.020912537600, 'May  3 2018  5:00AM'),
(41, 5, 0.013077568800, 'May  3 2018  5:00AM'),
(41, 6, 0.297981361000, 'May  3 2018  5:00AM'),
(41, 7, 1.723741630400, 'May  3 2018  5:00AM'),
(41, 8, 0.011513323400, 'May  3 2018  5:00AM'),
(41, 9, 0.097409830500, 'May  3 2018  5:00AM'),
(41, 10, 0.126724748700, 'May  3 2018  5:00AM'),
(41, 11, 0.139022753000, 'May  3 2018  5:00AM'),
(41, 12, 0.123205402900, 'May  3 2018  5:00AM'),
(41, 13, 0.061775065800, 'May  3 2018  5:00AM'),
(41, 14, 0.020956074100, 'May  3 2018  5:00AM'),
(41, 16, 1.046785416400, 'May  3 2018  5:00AM'),
(41, 17, 0.000000000000, 'May  3 2018  5:00AM'),
(41, 18, 0.057643459500, 'May  3 2018  5:00AM'),
(41, 19, 0.099807413800, 'May  3 2018  5:00AM'),
(41, 20, 0.466998289900, 'May  3 2018  5:00AM'),
(41, 21, 16.891177070200, 'May  3 2018  5:00AM'),
(41, 23, 0.334784829100, 'May  3 2018  5:00AM'),
(41, 24, 0.015634584100, 'May  3 2018  5:00AM'),
(41, 26, 0.055890376200, 'May  3 2018  5:00AM'),
(41, 27, 0.058859897300, 'May  3 2018  5:00AM'),
(41, 28, 0.057133340400, 'May  3 2018  5:00AM'),
(41, 29, 0.005901685700, 'May  3 2018  5:00AM'),
(41, 30, 0.004742623400, 'May  3 2018  5:00AM'),
(41, 31, 0.006035101500, 'May  3 2018  5:00AM'),
(41, 32, 1.815505897800, 'May  3 2018  5:00AM'),
(41, 33, 0.276938086700, 'May  3 2018  5:00AM'),
(41, 34, 0.011128444600, 'May  3 2018  5:00AM'),
(41, 35, 0.322257251800, 'May  3 2018  5:00AM'),
(41, 36, 0.055064643700, 'May  3 2018  5:00AM'),
(41, 37, 9.661638227400, 'May  3 2018  5:00AM'),
(41, 40, 0.051132056300, 'May  3 2018  5:00AM'),
(41, 41, 1.000000000000, 'May  3 2018  5:00AM')
"@ 
}
function Update-Users
{
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002064951';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002064951';        
    SET @username            =    'attwln1';
    SET @lastname            =    'attwln1';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln1',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002064951';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002064951';        
    SET @username            =    'attwln11';
    SET @lastname            =    'attwln11';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln11',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002046516';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002046516';        
    SET @username            =    'attwln2';
    SET @lastname            =    'attwln2';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln2',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002046516';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002046516';        
    SET @username            =    'attwln22';
    SET @lastname            =    'attwln22';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln22',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002046708';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002046708';        
    SET @username            =    'attwln3';
    SET @lastname            =    'attwln3';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln3',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002046708';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002046708';        
    SET @username            =    'attwln33';
    SET @lastname            =    'attwln33';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln33',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002066067';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002066067';        
    SET @username            =    'attwln4';
    SET @lastname            =    'attwln4';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln4',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002066067';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002066067';        
    SET @username            =    'attwln44';
    SET @lastname            =    'attwln44';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln44',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
$result = Execute-SQL -Query @"
USE attwln_config_prod_db

DECLARE @user_id INT, @query_action TINYINT, @res INT, @AcctNum AS nvarchar(200), @assigned_acct_num AS nvarchar(200), @username as nvarchar(200), @lastname as nvarchar(200), @product_codes as nvarchar(10) ;
    SET @AcctNum            =    '8310002066280';            --    Master Acct / Organization Name
    SET @assigned_acct_num    =    '8310002066280';        
    SET @username            =    'attwln5';
    SET @lastname            =    'attwln5';
    SET @product_codes        =    'POB';
    
EXEC sp_backendapi_user_get
      @username                = @username,
      @client_id             = 290,
      @create_user             = 1,
      @user_id                 = @user_id OUTPUT,
      @query_action         = @query_action OUTPUT
      
EXEC @res                     = sp_backendapi_user_update
      @user_id                 = @user_id,
      @email_addr             = 'noemail@globysQA.com',
      @email_type_id         = 0,
      @pay_perm             = 0,
      @payedit_perm         = 0,
      @termsofuse             = NULL,
      @firstname             = 'attwln5',
      @lastname             = @lastname,
      @language_id             = 0,
      @load_email_on         = 1,
      @currency_code         = 'USD',
      @permission_xml         = NULL,
      @mobile_number         = NULL

SELECT @res AS 'Result'

UPDATE t_user 
    SET password             = '87F326B2351886D21ACAF357D22EFB5E' --test1234
WHERE user_id                 = @user_id 

EXEC sp_backendapi_hierarchy_user_add 
      @user_id                 = @user_id, 
      @client_id             = 290, 
      @acct_num             = @AcctNum, 
      @assigned_acct_num    = @assigned_acct_num, 
      @user_state             = 5,                     -- Since we are in SSO Mode now, The @user_state = 1 should be 5 for this sproc call at the bottom
      @product_codes         = @product_codes

SELECT * FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum
SELECT * FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND usertype_id = 2
SELECT * FROM attwln_config_prod_db..t_acctuser WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum) AND user_id = @user_id
SELECT * FROM attwln_config_prod_db..t_organization WHERE organization_id IN (SELECT organization_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum)
-- For SSO, You need a record in this table --
SELECT * FROM attwln_config_prod_db..t_user_acct WHERE user_id IN (SELECT user_id FROM attwln_config_prod_db..t_user WHERE acct_id IN (SELECT acct_id FROM attwln_config_prod_db..t_acct WHERE num = @AcctNum))
GO
"@
}
function Execute-SQL
{
    param([string] $Query,
          [switch] $Silent = $false)
    if(!$Silent -and $Debug)
    {
        Write-Debug "SQLCMD -Q $Query"
    }
    $result = SQLCMD -W -h -1 -d attwln_config_prod_db -Q "$Query"
    if($result -and !$result.Contains("rows affected)"))
    {
        return $result
    }

}
function Mystery-Secret-Query
{
    $result = Execute-SQL -Query "update attwln_integrations.dbo.pipeline_Setting
set local_value = 1, dev_value = 1
where setting_id = 'IGNORE_REF_IND_FILE' 
"
}

function Get-FileList
{
    param([string]$share, [string[]]$list)
    Write-Debug -Value "SHARE: $share"
    Write-Debug -Value "LIST: $list"
    if($list -and $list.Count -gt 0)
    {
    Write-Debug -Value "return?"
        return $list
    }
    $name = "t"
    [string[]]$files = @()
    Write-Info "No files/folders input given, going manual"
    while($name)
    {
        Write-Info "Current folder $share"
        Write-Info "Enter file name or folder name"
        Write-Info "Hit enter when done"
        $name = Read-Host "Name: "
        if(!$name)
        {
            if(!$files -or $files.Count -eq 0)
            {
                Write-Info "You have not entered any files, this stage will not continue"
            }
            return $files
        }
        elseif($files.Contains($name))
        {
            Write-Info "Duplicate file, skiping"
        }
        elseif((Test-Path (Join-Path $share $name)))
        {
            Write-Info "Adding $name"
            $files += $name
        }
        else
        {
            Write-Info("`"$name`" not found")
        } 
    }
    return $files       
}

function Invoke-SQLJob
{
    param([string]$JobName)
    $startdate  = Get-Date -Format 'yyyy-MM-dd HH:mm:00.000'
    Write-Debug "SQLCMD -Q `"exec msdb.dbo.sp_start_job @job_name = '$JobName'`""
    $startjob = SQLCMD -Q "exec msdb.dbo.sp_start_job @job_name = '$JobName'"
    #Write-Debug $startjob
    return $startdate
}

function Create-BatchQuery
{
    param([string] $filename,
          [string] $startdate)
    return "set nocount on;select completed_datetime from attwln_load_db1.dbo.t_batch where extract_filename LIKE '$filename%'  and created_datetime > '$startdate' ORDER BY created_datetime DESC"
}
function Query-SQLJobStatus
{
    param([string] $query,
          [int] $ExpectedEntries,
          [scriptblock]$CompleteCondition,
          [switch] $NoComplete = $false)
    $count = 0;
    Write-Debug "Looking for entry in SQL table"
    $result = Execute-SQL -Query $query
    $result = ""
    while($count -lt 1000)
    {
        Start-Sleep -Seconds 4
        $result = Execute-SQL -Silent -Query $query
		Write-Host $result
       # if($CompleteCondition  -and $result -and $ExpectedEntries)
		if(&$CompleteCondition $result $ExpectedEntries)
        {
            Write-Debug "Job completed"
            return $result
        }      
        $count += 1
    }
    Write-Debug "Failed to see completed job, ending execution"
    throw "there is an exception in completing the job"
}
Function Invoke-Robocopy
{
    param([string]$source, 
          [string]$destination,
          [string]$file)
    Write-Debug "cmd.exe /c `"robocopy $source $destination $file`""
    $fileString = $file -Join " "

    $source = "`"" + $source + "`""
    $destination = "`"" + $destination + "`""

    Write-Debug -Value "$source"
    Write-Debug -Value "$destination"
    if($Debug)
    {
        cmd.exe /c "robocopy $source $destination $fileString"
    }
    else
    {
        cmd.exe /c "robocopy $source $destination $fileString >nul"
    }
}
Function Write-Stage
{
    param([string]$Message)

    $size = ([Math]::Max(0, 25))
    Write-Debug "**************************************************"
    Write-Debug ("{0}{1}{2}" -f ('*' * (([Math]::Max(0, 25) - [Math]::Floor($Message.Length / 2)))), $Message,('*' * $size )) 
    Write-Debug "**************************************************"
}
Function Write-Debug
{
    param([string] [Parameter(Mandatory, Position=0)]$Value,
          [switch] $NoNewline)
    if(!$Debug)
    {
        return
    }
    if($NoNewline)
    {
        Write-Host "$Value" -NoNewline
    }
    else
    {
        Write-Host "[DEBUG]$Value"
    }
}
Function Write-Info
{
    param([string] [Parameter(Mandatory, Position=0)]$Value,
          [switch] $NoNewline)
    if($NoNewline)
    {
        Write-Host "$Value" -NoNewline
    }
    else
    {
        Write-Host "[INFO]$Value"
    }
}
function Write-Status
{
    param([int]$Id,   [string]$Status)
    Write-Progress -Id $Id -Activity $ActText[$id] -Status $Status
    $ActLastStatus[$Id] = $Status
    if($Debug)
    {
        Write-Debug -Value "[$Id]$Status"
    }
}

function Do-Work
{
    param([int[]] $options)
    # $BatchCompleteCheck = {
                    # param($result, $expect)
                    # if($result -and $result.Count -ge $expect)
                    # {if(($result | where {$_.Contains("NULL")}).Count -eq 0){return $true}}return $false
                  # }

    # $EBSQLCount1 = "set nocount on;SELECT COUNT(*) FROM attwln_config_prod_db.dbo.t_user_acct"
    # $EBSQLCount2 = "set nocount on;SELECT COUNT(*) FROM attwln_config_prod_db.dbo.t_user"
	
	
		  
	
	
    if(!$options -or $options.Count -eq 0)
    {
        $options = @()
        Write-Host "Select Job(s)"
        Write-Host "Enter number of data to load, separated by commas"
        Write-Host "[1] - UAT Setup"
        Write-Host "[2] - Copy CADM Files and run SQLjob"
        Write-Host "[3] - Copy UB Files and run job"
        Write-Host "[4] - Copy EB Files and run job"
        Write-Host "[5] - Create Users"
        Write-Host "[0] - Exit"
        $options = Read-Host
    }
    # foreach($option in $options)
    # {
        # Write-Status -Id $option -Status "Waiting"
    # }
    foreach($option in $options)
    {
	
        switch ($option)
        {
            0 { break }
            1 {
                Write-Host "Starting"
                Write-Stage -Message UATSetup
                Restart-Email
                Update-CATPW
                Update-Path
                Update-SSORedirect
                Update-CATFlag
                Update-PDFPush
                Update-SSOLogin
                Update-LoginRedirect
                Update-Currency
                Write-Host "Completed"
              }
            2 {
                Write-Host "`n"	
				Write-Host "update to 36 months data"	
	            $updateSetting=Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "update t_load_setting set num_value =36 where load_setting_id in (3001,3002)";
				
				Write-Host "You choose loading CADM"			
				$startTime = get-date
				Write-Host "CADM start loading" $startTime
                $files = Get-FileList -share $CADMShare -list $CADMDatafile
                if (!$files -or $files.Count -le 0)
                {
                    Write-Host"HALTED: No files provided"
                    break
                }
                write-host "Start copying files"
                Invoke-Robocopy -source $CADMShare -destination $CADMFolder -file $files
                Start-Sleep -Seconds 15	
               
                Write-Host "Starting SQL Job"
                $CADMDate = Invoke-SQLJob -JobName $CADMJob
				$results = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "SELECT count(*) from t_batch where completed_datetime IS NULL ";
				if ($result.Count -eq 0)
				{
					Start-Sleep -Seconds 15	
					write-host "Waiting for ETL to start"
					$results = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "SELECT count(*) from t_batch where completed_datetime IS NULL ";
				}
				Write-host "Starting CADM ETL now"
             
				$WaitingIndicator = $true;
				while ($WaitingIndicator -eq $true)
				{													
					$results = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "SELECT count(*) from t_batch where completed_datetime IS NULL ";
					Write-Host "ETL is not done yet, waiting another 5 seconds"
					
					if ($results.Column1 -eq 0)
					{
						$WaitingIndicator = $false;
					}
					Start-Sleep -Seconds 15						
				}
				$endTime = get-date
                Write-Host "CADM Completed at " $endTime
				Start-Sleep -Seconds 100				
              }
            3 {                
               
				Write-Host "`n"	
				$UBStartTime = get-date
				Write-host "UB processing start time " $UBStartTime
				
                $UBFiles = Get-FileList -share $UBShare -list $UBDatafile
				
                if (!$UBFiles -or $UBFiles.Count -le 0)
                {				
                    Write-Host "HALTED: No files provided"
                    break
                }
                $loseFiles = @()				
				
                foreach($file in $ubfiles)
                {
				    if (Test-Path -PathType Container (Join-Path $UBShare $file))
                    {									
						#arrange
                      
						Write-Host "Copying folder $file"
						Write-Host "`n"	                    
						
                        Invoke-Robocopy -source (Join-Path $UBShare $file) -destination $UBFolder						
                       	
						#action	
						Write-Host "Starting, first job is $UBJob1"
                        $UBDate = Invoke-SQLJob -JobName $UBJob1						
                        $UBextract = "UB_%" + (Get-Date -Format "yyyyMMdd")
						Write-Host "Starting find files at $UBDate" 				
                       
						$fileList = Get-ChildItem $UBFolder -Name -Filter *DAT.gz											
						
						#assert						
						while($fileList.Count -gt 0)
                        {      
							$notMovingItem1 = Get-ChildItem "F:\Load\ToConvert\attwln\ub"
							Start-Sleep -Seconds 15													
                            $fileList = Get-ChildItem $UBFolder -Name -Filter *DAT.gz
							Write-Host "Checking on the total files not yet to in-process folder :" $fileList.Count 
							
							$notMovingItem2 = Get-ChildItem "F:\Load\ToConvert\attwln\ub"
							if ($notMovingItem1.Count -eq $notMovingItem2.Count)
							{
							
							write-host 'stop the job'
							$stopjob = SQLCMD -Q "exec msdb.dbo.sp_start_job @job_name = '$UBJob1'" 
						
							Start-Sleep -Seconds 2	
							write-host "start the job again"
							$UBDate = Invoke-SQLJob -JobName $UBJob1= Invoke-SQLJob -JobName $UBJob1					
							}	
                        }											
						Write-Host "Valid files are done moving into in_Process folder, UB find files job done." 
						Start-Sleep -Seconds 10	
						
						
						#action 2						
						
						Write-Host "`n"	
						$startTime = get-date
						Write-Host "Starting batch process"  $startTime 
						Write-Host $UBJob2		
						
						$UBStepTwoStartTime = Invoke-SQLJob -JobName $UBJob2
										
						Start-Sleep -Seconds 10
						#assert 2
						$pipelineBatchTableReady = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_integrations" -Query "select count(*) from dbo.pipeline_batch where name like 'UB%' and start_datetime_utc is null"
						
												
						if($pipelineBatchTableReady.Column1 -eq 0)
						{
							write-host "I am in here 1 pipeline batch is not ready"
							Start-Sleep -Seconds 20	
							write-host "waiting for pipeline batch to populate"
							$pipelineBatchTableReady = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_integrations" -Query "select count(*) from dbo.pipeline_batch where name like 'UB%' and start_datetime_utc is null"						
						}
						
										
						$UBProcessStatus = Get-ChildItem "F:\Load\ToConvert\attwln\ub\in_process"	
						$ETLstatus = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "select count(*) from t_batch where extract_filename like 'UB%' and completed_datetime is null "
						while ($UBProcessStatus.Count -gt 1)
						{	
							
							
							$ETLstatus = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "select count(*) from t_batch where extract_filename like 'UB%' and completed_datetime is null "
							$UBProcessStatus = Get-ChildItem "F:\Load\ToConvert\attwln\ub\in_process"
							Write-Host "`n"							
							Write-Host "Batch are to be processed" $UBProcessStatus.Count
							Write-Host "Batch currently being processed"  $ETLstatus.Column1	

							$worktime = get-date
							Write-host "Still processing ETL at " $worktime
							Start-Sleep -Seconds 120							
						}
						
						Write-Host "`n"	
						$finishTime = get-date
						Write-host "Finished  UB data process ETL at " $finishTime				
						
						
						
						#action 3
						
						Write-Host "`n"	
						Write-Host "Starting Update Account Detail Cache"
						$UBDate3 = Invoke-SQLJob -JobName $UBJob3					
						
                        $UBExtractFile3 = "UB_%" + (Get-Date -Format "yyyyMMdd")    
						Start-Sleep -Seconds 30					
						
						#assert 3
                       
						$AcctDetailCacheUpdateResults = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_integrations" -Query "SELECT count(*) from cache_account_detail"				
                        if ($AcctDetailCacheUpdateResults.Column1 -lt 500)
						{
							Start-Sleep -Seconds 10
						}
						
						$totalRecordInCacheAcctDetailTable = $AcctDetailCacheUpdateResults.Column1
						Write-Host "`n"	
						Write-Host "There are total $totalRecordInCacheAcctDetailTable records in Cache Account Detail Table " $totalRecordInCacheAcctDetailTable 				
						
						Write-Host "Update Account Detail Cache Job done" 
                    }
                    else
                    {
                       # $loseFiles += $file
					   Write-host "We have UB files not being able to process and needs investigation"
                    }
				}              
				Write-Host "`n"	
				$UBEndTime = get-date
				Write-host "UB processing End time " $UBEndTime
				Start-Sleep -Seconds 200	
              }
            4 {
			
                Write-Host "Starting Ebill dataloading "
               	#arrange   
                $EBFiles = Get-FileList -share $EBShare -list $EBDatafile				
				
                if (!$EBFiles -or $EBFiles.Count -le 0)
                {
                    Write-Host "HALTED: No files provided"
                    break
                }               
				Write-Host "Loading folder Ebill-migration from source" 				
				Invoke-Robocopy -source $EBShare -destination $EBFolder  


				#team update for 36 months data available

				$UpdateTo36Months= Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "update t_load_setting 	SET num_value = 36 WHERE load_setting_id IN (3001,3002)"	

				
				
				#newly added set up	for pipeline setting table			
				$Update1= Invoke-Sqlcmd -ServerInstance "." -Database "attwln_integrations" -Query "UPDATE pipeline_setting SET dev_value = '1' WHERE setting_id = 'IGNORE_USER_FILE_VALIDATIONS' AND pipeline_id = '27240CAF-2ADA-4A98-8392-3B21586CD277'"	
				
				$update2= Invoke-Sqlcmd -ServerInstance "." -Database "attwln_integrations" -Query "update  a_source_parse.ebill_user SET is_valid = 1"	
				
								
				#action									
					
				$EBDate = Invoke-SQLJob -JobName $EBJob1						
						
                #assert
                
				$fileNotDoneList = Get-ChildItem $EBFolder -Filter *.dat						
											
				while($fileNotDoneList.Count -gt 0)
				{       
					Start-Sleep -Seconds 5													
					$fileNotDoneList = Get-ChildItem $EBFolder -Filter  *.dat
					Write-Host "Checking on the total files not yet to in-process folder under ebill_migration:" $fileNotDoneList.Count
				}
				Write-Host "`n"			
				Write-Host "Starting $EBJob1"
						
				$EbillETLState = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "select count(*) from t_batch where completed_datetime Is NULL"
				
				$EbillInProcessFolderState = Get-ChildItem "F:\Load\ToConvert\attwln\ebill_migration\in_process"
				
				Start-Sleep -Seconds 15
				while ($EbillETLState.Column1 -eq 0)
				{
					$EbillETLState = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "select count(*) from t_batch where completed_datetime Is NULL and extract_filename like 'EBILL%' "
					Start-Sleep -Seconds  30
					Write-Host "ETL is not starting yet, waiting for another 30 seconds"					
				}
				
				Start-Sleep -Seconds 15
				$EbillETLState = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "select count(*) from t_batch where completed_datetime Is NULL and extract_filename like 'EBILL%' "
				while ( $EbillInProcessFolderState.Count -gt 0 -and $EbillETLState.Column1 -gt 0)
				{		
					Start-Sleep -Seconds 15						
					$EbillInProcessFolderState = Get-ChildItem "F:\Load\ToConvert\attwln\ebill_migration\in_process"
					$EbillETLState = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_load_db1" -Query "select count(*) from t_batch where completed_datetime Is NULL and extract_filename like 'EBILL%' "
					Write-Host "EBILL ETL is being processed, waiting".						
				}
				
				$timestamp = Get-Date
				Write-host "EBILL ETL is done " $timestamp
				
				Start-Sleep -Seconds 15	
				# action 2
				
				Write-Host "`n"	
				Write-Host "Update source_parse_ebill_user state as is_valid"
				$updateSetting = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_integrations" -Query " Update a_source_parse.ebill_user SET is_valid = 1"
				Start-Sleep -Seconds 15	
				
				Write-Host "Done updating source_parse_ebill_user state as is_valid "
				# action 3
						
				Write-Host "`n"	
				Write-Host "Starting $EBJob2"
				
				$EBDate2 = Invoke-SQLJob -JobName $EBJob2				
				Start-Sleep -Seconds 60
						
				# action 4 
				Write-Host "`n"	
				Write-Host "Starting $EBJob3"
				$EBDate3 = Invoke-SQLJob -JobName $EBJob3	
				Start-Sleep -Seconds 60
				
				# assert 4 -check t_user_acct table is populated
				
				$tUserTotal = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_config_prod_db" -Query "select count(*) from t_user"
				write-host "Total user number is " $tUserTotal.Column1
				
				$tBillTotal = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_config_prod_db" -Query "select count(*) from t_billed"
				write-host "Total bill number is " $tBillTotal.Column1
				
				$tAcctTotal = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_config_prod_db" -Query "select count(*) from  t_acct"
				write-host "Total acct number is " $tAcctTotal.Column1
				
				$tUserAcct = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_config_prod_db" -Query "select count(*) from t_user_acct"

				while ($tUserAcct.Column1 -eq 0 )
				{
					Start-Sleep -Seconds 10		
					$tUserAcct = Invoke-Sqlcmd -ServerInstance "." -Database "attwln_config_prod_db" -Query "select count(*) t_user_acct"
					Write-Host "`n"	
					write-host "Total user with acounts" $tUserAcct.Column1
				}		
              
				Write-Host "`n"	
                $doneEbilltimestamp = Get-Date
				Write-host "EBILL dataload is done " $doneEbilltimestamp
              }
            5 {
                   Write-Status -Id 5 -Status "Starting"
                   Update-Users
                   Write-Status -Id 5 -Status "Completed"
              }
			6 {	
				Write-Host "Starting CAPM CBUS work"
				$starttime = Get-Date
				Write-host "CAPM CBUS dataload start at   " $starttime 			
			    $CAPMCBUSFiles  = Get-FileList -share $CAPMCBUSShare  -list $CAPMCBUSDatafile				
				
                if (!$CAPMCBUSFiles  -or $CAPMCBUSFiles.Count -le 0)
                {
                    Write-Host "HALTED: No files provided"
                    break
                }				
				foreach ($file in $CAPMCBUSFiles){
					
					Write-Host "Copying Files"
					Invoke-Robocopy -source (Join-Path $CAPMCBUSShare $file ) -destination $CAPMCBUSFolder
									
					Write-Host "Starting CAPM CBUS SQL Job"
					$CAPMCBUSJobStart= Invoke-SQLJob -JobName $CAPMCBUSJob
					
					$fileNotDoneList = Get-ChildItem $CAPMCBUSFolder -Filter *.dat						
					$jobStartStopTime = 0
					while($fileNotDoneList.Count -gt 0)
					{   	
						$fileNotDoneList = Get-ChildItem $CAPMCBUSFolder -Filter *.dat	
						$startNumber = $fileNotDoneList.Count;
						Write-Host "Checking on the total files not yet to in-process folder under CAPM CBUS folder:" $fileNotDoneList.Count
						Start-Sleep -Seconds 15								
						$fileNotDoneList = Get-ChildItem $CAPMCBUSFolder  -Filter  *.dat
						$endNumber = $fileNotDoneList.count						
						
						if ($startNumber -eq $endNumber)
						{
							write-host 'Stop the job'
							$stopjob = SQLCMD -Q "exec msdb.dbo.sp_start_job @job_name = '$CAPMCBUSJob'" 
						
							Start-Sleep -Seconds 2	
							write-host "Start the job again"
							$CAPMCBUSJobStart= Invoke-SQLJob -JobName $CAPMCBUSJob
							$jobStartStopTime = $jobStartStopTime +1
						}
						
					}
					Write-Host	"Job start and stop total " $jobStartStopTime					
				}		
				Write-Host "`n"	
                Write-Host "CAPM CBUS loading completed"
				$endtime = Get-Date
				Write-host "CAPM CBUS dataload end at   " $endtime 	
				Start-Sleep -Seconds 100	                
			 }
			7 {  
               				
				$CAPMCFMFiles   = Get-FileList -share $CAPMCFMShare  -list $CAPMCFMDatafile			
				
				
				if (!$CAPMCFMFiles  -or $CAPMCFMFiles.Count -le 0)
                {
                    Write-Host "No file to be processed"
                    break
                }				
				Start-Sleep -Seconds 15	
				foreach ($file in $CAPMCFMFiles){
					Write-Host "`n"	
					Write-Host "Copying Files"
					Invoke-Robocopy -source (Join-Path $CAPMCFMShare $file ) -destination $CAPMCFMFolder
									
					Write-Host "Starting CAPM CFM SQL Job"
					$CAPMCFMJobStart= Invoke-SQLJob -JobName $CAPMCFMJob
					Start-Sleep -Seconds 120	
					Write-Host "`n"	
					Write-Host "Celebration for getting the CAPM CFM loaded successfully!!!"
								
				}
				Start-Sleep -Seconds 100					
			 }
        }
    }
}
Do-Work -options $Options

foreach($option in $options)
{
    Write-Debug  "$ActText[$option] - $ActLastStatus[$option]"
}